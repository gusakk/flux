// DO NOT EDIT: This file is autogenerated via the builtin command.

package ecs

import (
	ast "github.com/gusakk/flux/ast"
	parser "github.com/gusakk/flux/internal/parser"
)

var FluxTestPackages = []*ast.Package{&ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 104,
					Line:   91,
				},
				File:   "ecs_test.flux",
				Source: "package ecs_test\n\nimport \"ecs\"\nimport \"csv\"\nimport \"testing\"\n\nappend_test = (name, value) => {\n    return \",,0,\" + name + \",\" + string(v:value) + \"\\n\"\n}\n\ndyn_win1 = ecs.get_dynamic_window_info(int_start: 1569002022,\n                                       int_stop:  1569012022,\n                                       max: 90,\n                                       start_offset: 2,\n                                       stop_offset: 2)\n\ndyn_win2 = ecs.get_dynamic_window_info(int_start: 1569001997,\n                                       int_stop:  1569112022,\n                                       max: 40,\n                                       start_offset: 1,\n                                       stop_offset: 1)\n\ndyn_dsm1 = ecs.get_dyn_downsample_info(start: 1569001997,\n                                       stop:  1569112022,\n                                       max: 40,\n                                       measurement:\"cq_m1\",\n                                       start_offset: 1,\n                                       stop_offset: 1)\n\ndyn_dsm2 = ecs.get_dyn_downsample_info(start: 1567001997,\n                                       stop:  1569112022,\n                                       max: 200,\n                                       measurement:\"cq_m2\",\n                                       start_offset: 2,\n                                       stop_offset: 1)\n\n\n\ninData = \"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)\n+ append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)\n+ append_test(name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z)\n+ append_test(name:\"dyn_downsample_2_stop_offset\", value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z)\n\n\n\ninput = csv.from(csv: inData) |> group(columns:[\"test\"])\n\n// copy input stream but make all values true\nwant = input |> map(fn: (r) => ({value:true}))\n\n// NB sort() is required after input to make streams different\ntest _ecs_functions = () =>\n\t({input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)})",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   9,
					},
					File:   "ecs_test.flux",
					Source: "append_test = (name, value) => {\n    return \",,0,\" + name + \",\" + string(v:value) + \"\\n\"\n}",
					Start: ast.Position{
						Column: 1,
						Line:   7,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 12,
							Line:   7,
						},
						File:   "ecs_test.flux",
						Source: "append_test",
						Start: ast.Position{
							Column: 1,
							Line:   7,
						},
					},
				},
				Name: "append_test",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   9,
						},
						File:   "ecs_test.flux",
						Source: "(name, value) => {\n    return \",,0,\" + name + \",\" + string(v:value) + \"\\n\"\n}",
						Start: ast.Position{
							Column: 15,
							Line:   7,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   9,
							},
							File:   "ecs_test.flux",
							Source: "{\n    return \",,0,\" + name + \",\" + string(v:value) + \"\\n\"\n}",
							Start: ast.Position{
								Column: 32,
								Line:   7,
							},
						},
					},
					Body: []ast.Statement{&ast.ReturnStatement{
						Argument: &ast.BinaryExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 56,
										Line:   8,
									},
									File:   "ecs_test.flux",
									Source: "\",,0,\" + name + \",\" + string(v:value) + \"\\n\"",
									Start: ast.Position{
										Column: 12,
										Line:   8,
									},
								},
							},
							Left: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   8,
										},
										File:   "ecs_test.flux",
										Source: "\",,0,\" + name + \",\" + string(v:value)",
										Start: ast.Position{
											Column: 12,
											Line:   8,
										},
									},
								},
								Left: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 31,
												Line:   8,
											},
											File:   "ecs_test.flux",
											Source: "\",,0,\" + name + \",\"",
											Start: ast.Position{
												Column: 12,
												Line:   8,
											},
										},
									},
									Left: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   8,
												},
												File:   "ecs_test.flux",
												Source: "\",,0,\" + name",
												Start: ast.Position{
													Column: 12,
													Line:   8,
												},
											},
										},
										Left: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 18,
														Line:   8,
													},
													File:   "ecs_test.flux",
													Source: "\",,0,\"",
													Start: ast.Position{
														Column: 12,
														Line:   8,
													},
												},
											},
											Value: ",,0,",
										},
										Operator: 5,
										Right: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 25,
														Line:   8,
													},
													File:   "ecs_test.flux",
													Source: "name",
													Start: ast.Position{
														Column: 21,
														Line:   8,
													},
												},
											},
											Name: "name",
										},
									},
									Operator: 5,
									Right: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 31,
													Line:   8,
												},
												File:   "ecs_test.flux",
												Source: "\",\"",
												Start: ast.Position{
													Column: 28,
													Line:   8,
												},
											},
										},
										Value: ",",
									},
								},
								Operator: 5,
								Right: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   8,
												},
												File:   "ecs_test.flux",
												Source: "v:value",
												Start: ast.Position{
													Column: 41,
													Line:   8,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   8,
													},
													File:   "ecs_test.flux",
													Source: "v:value",
													Start: ast.Position{
														Column: 41,
														Line:   8,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   8,
														},
														File:   "ecs_test.flux",
														Source: "v",
														Start: ast.Position{
															Column: 41,
															Line:   8,
														},
													},
												},
												Name: "v",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 48,
															Line:   8,
														},
														File:   "ecs_test.flux",
														Source: "value",
														Start: ast.Position{
															Column: 43,
															Line:   8,
														},
													},
												},
												Name: "value",
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   8,
											},
											File:   "ecs_test.flux",
											Source: "string(v:value)",
											Start: ast.Position{
												Column: 34,
												Line:   8,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 40,
													Line:   8,
												},
												File:   "ecs_test.flux",
												Source: "string",
												Start: ast.Position{
													Column: 34,
													Line:   8,
												},
											},
										},
										Name: "string",
									},
								},
							},
							Operator: 5,
							Right: &ast.StringLiteral{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 56,
											Line:   8,
										},
										File:   "ecs_test.flux",
										Source: "\"\\n\"",
										Start: ast.Position{
											Column: 52,
											Line:   8,
										},
									},
								},
								Value: "\n",
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 56,
									Line:   8,
								},
								File:   "ecs_test.flux",
								Source: "return \",,0,\" + name + \",\" + string(v:value) + \"\\n\"",
								Start: ast.Position{
									Column: 5,
									Line:   8,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   7,
							},
							File:   "ecs_test.flux",
							Source: "name",
							Start: ast.Position{
								Column: 16,
								Line:   7,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   7,
								},
								File:   "ecs_test.flux",
								Source: "name",
								Start: ast.Position{
									Column: 16,
									Line:   7,
								},
							},
						},
						Name: "name",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 27,
								Line:   7,
							},
							File:   "ecs_test.flux",
							Source: "value",
							Start: ast.Position{
								Column: 22,
								Line:   7,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 27,
									Line:   7,
								},
								File:   "ecs_test.flux",
								Source: "value",
								Start: ast.Position{
									Column: 22,
									Line:   7,
								},
							},
						},
						Name: "value",
					},
					Value: nil,
				}},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 55,
						Line:   15,
					},
					File:   "ecs_test.flux",
					Source: "dyn_win1 = ecs.get_dynamic_window_info(int_start: 1569002022,\n                                       int_stop:  1569012022,\n                                       max: 90,\n                                       start_offset: 2,\n                                       stop_offset: 2)",
					Start: ast.Position{
						Column: 1,
						Line:   11,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   11,
						},
						File:   "ecs_test.flux",
						Source: "dyn_win1",
						Start: ast.Position{
							Column: 1,
							Line:   11,
						},
					},
				},
				Name: "dyn_win1",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   15,
							},
							File:   "ecs_test.flux",
							Source: "int_start: 1569002022,\n                                       int_stop:  1569012022,\n                                       max: 90,\n                                       start_offset: 2,\n                                       stop_offset: 2",
							Start: ast.Position{
								Column: 40,
								Line:   11,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   11,
								},
								File:   "ecs_test.flux",
								Source: "int_start: 1569002022",
								Start: ast.Position{
									Column: 40,
									Line:   11,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   11,
									},
									File:   "ecs_test.flux",
									Source: "int_start",
									Start: ast.Position{
										Column: 40,
										Line:   11,
									},
								},
							},
							Name: "int_start",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 61,
										Line:   11,
									},
									File:   "ecs_test.flux",
									Source: "1569002022",
									Start: ast.Position{
										Column: 51,
										Line:   11,
									},
								},
							},
							Value: int64(1569002022),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   12,
								},
								File:   "ecs_test.flux",
								Source: "int_stop:  1569012022",
								Start: ast.Position{
									Column: 40,
									Line:   12,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   12,
									},
									File:   "ecs_test.flux",
									Source: "int_stop",
									Start: ast.Position{
										Column: 40,
										Line:   12,
									},
								},
							},
							Name: "int_stop",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 61,
										Line:   12,
									},
									File:   "ecs_test.flux",
									Source: "1569012022",
									Start: ast.Position{
										Column: 51,
										Line:   12,
									},
								},
							},
							Value: int64(1569012022),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   13,
								},
								File:   "ecs_test.flux",
								Source: "max: 90",
								Start: ast.Position{
									Column: 40,
									Line:   13,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   13,
									},
									File:   "ecs_test.flux",
									Source: "max",
									Start: ast.Position{
										Column: 40,
										Line:   13,
									},
								},
							},
							Name: "max",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   13,
									},
									File:   "ecs_test.flux",
									Source: "90",
									Start: ast.Position{
										Column: 45,
										Line:   13,
									},
								},
							},
							Value: int64(90),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   14,
								},
								File:   "ecs_test.flux",
								Source: "start_offset: 2",
								Start: ast.Position{
									Column: 40,
									Line:   14,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 52,
										Line:   14,
									},
									File:   "ecs_test.flux",
									Source: "start_offset",
									Start: ast.Position{
										Column: 40,
										Line:   14,
									},
								},
							},
							Name: "start_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   14,
									},
									File:   "ecs_test.flux",
									Source: "2",
									Start: ast.Position{
										Column: 54,
										Line:   14,
									},
								},
							},
							Value: int64(2),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   15,
								},
								File:   "ecs_test.flux",
								Source: "stop_offset: 2",
								Start: ast.Position{
									Column: 40,
									Line:   15,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   15,
									},
									File:   "ecs_test.flux",
									Source: "stop_offset",
									Start: ast.Position{
										Column: 40,
										Line:   15,
									},
								},
							},
							Name: "stop_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   15,
									},
									File:   "ecs_test.flux",
									Source: "2",
									Start: ast.Position{
										Column: 53,
										Line:   15,
									},
								},
							},
							Value: int64(2),
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 55,
							Line:   15,
						},
						File:   "ecs_test.flux",
						Source: "ecs.get_dynamic_window_info(int_start: 1569002022,\n                                       int_stop:  1569012022,\n                                       max: 90,\n                                       start_offset: 2,\n                                       stop_offset: 2)",
						Start: ast.Position{
							Column: 12,
							Line:   11,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 39,
								Line:   11,
							},
							File:   "ecs_test.flux",
							Source: "ecs.get_dynamic_window_info",
							Start: ast.Position{
								Column: 12,
								Line:   11,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   11,
								},
								File:   "ecs_test.flux",
								Source: "ecs",
								Start: ast.Position{
									Column: 12,
									Line:   11,
								},
							},
						},
						Name: "ecs",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   11,
								},
								File:   "ecs_test.flux",
								Source: "get_dynamic_window_info",
								Start: ast.Position{
									Column: 16,
									Line:   11,
								},
							},
						},
						Name: "get_dynamic_window_info",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 55,
						Line:   21,
					},
					File:   "ecs_test.flux",
					Source: "dyn_win2 = ecs.get_dynamic_window_info(int_start: 1569001997,\n                                       int_stop:  1569112022,\n                                       max: 40,\n                                       start_offset: 1,\n                                       stop_offset: 1)",
					Start: ast.Position{
						Column: 1,
						Line:   17,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   17,
						},
						File:   "ecs_test.flux",
						Source: "dyn_win2",
						Start: ast.Position{
							Column: 1,
							Line:   17,
						},
					},
				},
				Name: "dyn_win2",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   21,
							},
							File:   "ecs_test.flux",
							Source: "int_start: 1569001997,\n                                       int_stop:  1569112022,\n                                       max: 40,\n                                       start_offset: 1,\n                                       stop_offset: 1",
							Start: ast.Position{
								Column: 40,
								Line:   17,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   17,
								},
								File:   "ecs_test.flux",
								Source: "int_start: 1569001997",
								Start: ast.Position{
									Column: 40,
									Line:   17,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 49,
										Line:   17,
									},
									File:   "ecs_test.flux",
									Source: "int_start",
									Start: ast.Position{
										Column: 40,
										Line:   17,
									},
								},
							},
							Name: "int_start",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 61,
										Line:   17,
									},
									File:   "ecs_test.flux",
									Source: "1569001997",
									Start: ast.Position{
										Column: 51,
										Line:   17,
									},
								},
							},
							Value: int64(1569001997),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   18,
								},
								File:   "ecs_test.flux",
								Source: "int_stop:  1569112022",
								Start: ast.Position{
									Column: 40,
									Line:   18,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   18,
									},
									File:   "ecs_test.flux",
									Source: "int_stop",
									Start: ast.Position{
										Column: 40,
										Line:   18,
									},
								},
							},
							Name: "int_stop",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 61,
										Line:   18,
									},
									File:   "ecs_test.flux",
									Source: "1569112022",
									Start: ast.Position{
										Column: 51,
										Line:   18,
									},
								},
							},
							Value: int64(1569112022),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   19,
								},
								File:   "ecs_test.flux",
								Source: "max: 40",
								Start: ast.Position{
									Column: 40,
									Line:   19,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   19,
									},
									File:   "ecs_test.flux",
									Source: "max",
									Start: ast.Position{
										Column: 40,
										Line:   19,
									},
								},
							},
							Name: "max",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   19,
									},
									File:   "ecs_test.flux",
									Source: "40",
									Start: ast.Position{
										Column: 45,
										Line:   19,
									},
								},
							},
							Value: int64(40),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   20,
								},
								File:   "ecs_test.flux",
								Source: "start_offset: 1",
								Start: ast.Position{
									Column: 40,
									Line:   20,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 52,
										Line:   20,
									},
									File:   "ecs_test.flux",
									Source: "start_offset",
									Start: ast.Position{
										Column: 40,
										Line:   20,
									},
								},
							},
							Name: "start_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   20,
									},
									File:   "ecs_test.flux",
									Source: "1",
									Start: ast.Position{
										Column: 54,
										Line:   20,
									},
								},
							},
							Value: int64(1),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   21,
								},
								File:   "ecs_test.flux",
								Source: "stop_offset: 1",
								Start: ast.Position{
									Column: 40,
									Line:   21,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   21,
									},
									File:   "ecs_test.flux",
									Source: "stop_offset",
									Start: ast.Position{
										Column: 40,
										Line:   21,
									},
								},
							},
							Name: "stop_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   21,
									},
									File:   "ecs_test.flux",
									Source: "1",
									Start: ast.Position{
										Column: 53,
										Line:   21,
									},
								},
							},
							Value: int64(1),
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 55,
							Line:   21,
						},
						File:   "ecs_test.flux",
						Source: "ecs.get_dynamic_window_info(int_start: 1569001997,\n                                       int_stop:  1569112022,\n                                       max: 40,\n                                       start_offset: 1,\n                                       stop_offset: 1)",
						Start: ast.Position{
							Column: 12,
							Line:   17,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 39,
								Line:   17,
							},
							File:   "ecs_test.flux",
							Source: "ecs.get_dynamic_window_info",
							Start: ast.Position{
								Column: 12,
								Line:   17,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   17,
								},
								File:   "ecs_test.flux",
								Source: "ecs",
								Start: ast.Position{
									Column: 12,
									Line:   17,
								},
							},
						},
						Name: "ecs",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   17,
								},
								File:   "ecs_test.flux",
								Source: "get_dynamic_window_info",
								Start: ast.Position{
									Column: 16,
									Line:   17,
								},
							},
						},
						Name: "get_dynamic_window_info",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 55,
						Line:   28,
					},
					File:   "ecs_test.flux",
					Source: "dyn_dsm1 = ecs.get_dyn_downsample_info(start: 1569001997,\n                                       stop:  1569112022,\n                                       max: 40,\n                                       measurement:\"cq_m1\",\n                                       start_offset: 1,\n                                       stop_offset: 1)",
					Start: ast.Position{
						Column: 1,
						Line:   23,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   23,
						},
						File:   "ecs_test.flux",
						Source: "dyn_dsm1",
						Start: ast.Position{
							Column: 1,
							Line:   23,
						},
					},
				},
				Name: "dyn_dsm1",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   28,
							},
							File:   "ecs_test.flux",
							Source: "start: 1569001997,\n                                       stop:  1569112022,\n                                       max: 40,\n                                       measurement:\"cq_m1\",\n                                       start_offset: 1,\n                                       stop_offset: 1",
							Start: ast.Position{
								Column: 40,
								Line:   23,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 57,
									Line:   23,
								},
								File:   "ecs_test.flux",
								Source: "start: 1569001997",
								Start: ast.Position{
									Column: 40,
									Line:   23,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   23,
									},
									File:   "ecs_test.flux",
									Source: "start",
									Start: ast.Position{
										Column: 40,
										Line:   23,
									},
								},
							},
							Name: "start",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   23,
									},
									File:   "ecs_test.flux",
									Source: "1569001997",
									Start: ast.Position{
										Column: 47,
										Line:   23,
									},
								},
							},
							Value: int64(1569001997),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 57,
									Line:   24,
								},
								File:   "ecs_test.flux",
								Source: "stop:  1569112022",
								Start: ast.Position{
									Column: 40,
									Line:   24,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   24,
									},
									File:   "ecs_test.flux",
									Source: "stop",
									Start: ast.Position{
										Column: 40,
										Line:   24,
									},
								},
							},
							Name: "stop",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   24,
									},
									File:   "ecs_test.flux",
									Source: "1569112022",
									Start: ast.Position{
										Column: 47,
										Line:   24,
									},
								},
							},
							Value: int64(1569112022),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 47,
									Line:   25,
								},
								File:   "ecs_test.flux",
								Source: "max: 40",
								Start: ast.Position{
									Column: 40,
									Line:   25,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   25,
									},
									File:   "ecs_test.flux",
									Source: "max",
									Start: ast.Position{
										Column: 40,
										Line:   25,
									},
								},
							},
							Name: "max",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 47,
										Line:   25,
									},
									File:   "ecs_test.flux",
									Source: "40",
									Start: ast.Position{
										Column: 45,
										Line:   25,
									},
								},
							},
							Value: int64(40),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 59,
									Line:   26,
								},
								File:   "ecs_test.flux",
								Source: "measurement:\"cq_m1\"",
								Start: ast.Position{
									Column: 40,
									Line:   26,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   26,
									},
									File:   "ecs_test.flux",
									Source: "measurement",
									Start: ast.Position{
										Column: 40,
										Line:   26,
									},
								},
							},
							Name: "measurement",
						},
						Value: &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 59,
										Line:   26,
									},
									File:   "ecs_test.flux",
									Source: "\"cq_m1\"",
									Start: ast.Position{
										Column: 52,
										Line:   26,
									},
								},
							},
							Value: "cq_m1",
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   27,
								},
								File:   "ecs_test.flux",
								Source: "start_offset: 1",
								Start: ast.Position{
									Column: 40,
									Line:   27,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 52,
										Line:   27,
									},
									File:   "ecs_test.flux",
									Source: "start_offset",
									Start: ast.Position{
										Column: 40,
										Line:   27,
									},
								},
							},
							Name: "start_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   27,
									},
									File:   "ecs_test.flux",
									Source: "1",
									Start: ast.Position{
										Column: 54,
										Line:   27,
									},
								},
							},
							Value: int64(1),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   28,
								},
								File:   "ecs_test.flux",
								Source: "stop_offset: 1",
								Start: ast.Position{
									Column: 40,
									Line:   28,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   28,
									},
									File:   "ecs_test.flux",
									Source: "stop_offset",
									Start: ast.Position{
										Column: 40,
										Line:   28,
									},
								},
							},
							Name: "stop_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   28,
									},
									File:   "ecs_test.flux",
									Source: "1",
									Start: ast.Position{
										Column: 53,
										Line:   28,
									},
								},
							},
							Value: int64(1),
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 55,
							Line:   28,
						},
						File:   "ecs_test.flux",
						Source: "ecs.get_dyn_downsample_info(start: 1569001997,\n                                       stop:  1569112022,\n                                       max: 40,\n                                       measurement:\"cq_m1\",\n                                       start_offset: 1,\n                                       stop_offset: 1)",
						Start: ast.Position{
							Column: 12,
							Line:   23,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 39,
								Line:   23,
							},
							File:   "ecs_test.flux",
							Source: "ecs.get_dyn_downsample_info",
							Start: ast.Position{
								Column: 12,
								Line:   23,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   23,
								},
								File:   "ecs_test.flux",
								Source: "ecs",
								Start: ast.Position{
									Column: 12,
									Line:   23,
								},
							},
						},
						Name: "ecs",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   23,
								},
								File:   "ecs_test.flux",
								Source: "get_dyn_downsample_info",
								Start: ast.Position{
									Column: 16,
									Line:   23,
								},
							},
						},
						Name: "get_dyn_downsample_info",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 55,
						Line:   35,
					},
					File:   "ecs_test.flux",
					Source: "dyn_dsm2 = ecs.get_dyn_downsample_info(start: 1567001997,\n                                       stop:  1569112022,\n                                       max: 200,\n                                       measurement:\"cq_m2\",\n                                       start_offset: 2,\n                                       stop_offset: 1)",
					Start: ast.Position{
						Column: 1,
						Line:   30,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 9,
							Line:   30,
						},
						File:   "ecs_test.flux",
						Source: "dyn_dsm2",
						Start: ast.Position{
							Column: 1,
							Line:   30,
						},
					},
				},
				Name: "dyn_dsm2",
			},
			Init: &ast.CallExpression{
				Arguments: []ast.Expression{&ast.ObjectExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 54,
								Line:   35,
							},
							File:   "ecs_test.flux",
							Source: "start: 1567001997,\n                                       stop:  1569112022,\n                                       max: 200,\n                                       measurement:\"cq_m2\",\n                                       start_offset: 2,\n                                       stop_offset: 1",
							Start: ast.Position{
								Column: 40,
								Line:   30,
							},
						},
					},
					Properties: []*ast.Property{&ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 57,
									Line:   30,
								},
								File:   "ecs_test.flux",
								Source: "start: 1567001997",
								Start: ast.Position{
									Column: 40,
									Line:   30,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 45,
										Line:   30,
									},
									File:   "ecs_test.flux",
									Source: "start",
									Start: ast.Position{
										Column: 40,
										Line:   30,
									},
								},
							},
							Name: "start",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   30,
									},
									File:   "ecs_test.flux",
									Source: "1567001997",
									Start: ast.Position{
										Column: 47,
										Line:   30,
									},
								},
							},
							Value: int64(1567001997),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 57,
									Line:   31,
								},
								File:   "ecs_test.flux",
								Source: "stop:  1569112022",
								Start: ast.Position{
									Column: 40,
									Line:   31,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 44,
										Line:   31,
									},
									File:   "ecs_test.flux",
									Source: "stop",
									Start: ast.Position{
										Column: 40,
										Line:   31,
									},
								},
							},
							Name: "stop",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 57,
										Line:   31,
									},
									File:   "ecs_test.flux",
									Source: "1569112022",
									Start: ast.Position{
										Column: 47,
										Line:   31,
									},
								},
							},
							Value: int64(1569112022),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   32,
								},
								File:   "ecs_test.flux",
								Source: "max: 200",
								Start: ast.Position{
									Column: 40,
									Line:   32,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   32,
									},
									File:   "ecs_test.flux",
									Source: "max",
									Start: ast.Position{
										Column: 40,
										Line:   32,
									},
								},
							},
							Name: "max",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   32,
									},
									File:   "ecs_test.flux",
									Source: "200",
									Start: ast.Position{
										Column: 45,
										Line:   32,
									},
								},
							},
							Value: int64(200),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 59,
									Line:   33,
								},
								File:   "ecs_test.flux",
								Source: "measurement:\"cq_m2\"",
								Start: ast.Position{
									Column: 40,
									Line:   33,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   33,
									},
									File:   "ecs_test.flux",
									Source: "measurement",
									Start: ast.Position{
										Column: 40,
										Line:   33,
									},
								},
							},
							Name: "measurement",
						},
						Value: &ast.StringLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 59,
										Line:   33,
									},
									File:   "ecs_test.flux",
									Source: "\"cq_m2\"",
									Start: ast.Position{
										Column: 52,
										Line:   33,
									},
								},
							},
							Value: "cq_m2",
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 55,
									Line:   34,
								},
								File:   "ecs_test.flux",
								Source: "start_offset: 2",
								Start: ast.Position{
									Column: 40,
									Line:   34,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 52,
										Line:   34,
									},
									File:   "ecs_test.flux",
									Source: "start_offset",
									Start: ast.Position{
										Column: 40,
										Line:   34,
									},
								},
							},
							Name: "start_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 55,
										Line:   34,
									},
									File:   "ecs_test.flux",
									Source: "2",
									Start: ast.Position{
										Column: 54,
										Line:   34,
									},
								},
							},
							Value: int64(2),
						},
					}, &ast.Property{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 54,
									Line:   35,
								},
								File:   "ecs_test.flux",
								Source: "stop_offset: 1",
								Start: ast.Position{
									Column: 40,
									Line:   35,
								},
							},
						},
						Key: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 51,
										Line:   35,
									},
									File:   "ecs_test.flux",
									Source: "stop_offset",
									Start: ast.Position{
										Column: 40,
										Line:   35,
									},
								},
							},
							Name: "stop_offset",
						},
						Value: &ast.IntegerLiteral{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 54,
										Line:   35,
									},
									File:   "ecs_test.flux",
									Source: "1",
									Start: ast.Position{
										Column: 53,
										Line:   35,
									},
								},
							},
							Value: int64(1),
						},
					}},
					With: nil,
				}},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 55,
							Line:   35,
						},
						File:   "ecs_test.flux",
						Source: "ecs.get_dyn_downsample_info(start: 1567001997,\n                                       stop:  1569112022,\n                                       max: 200,\n                                       measurement:\"cq_m2\",\n                                       start_offset: 2,\n                                       stop_offset: 1)",
						Start: ast.Position{
							Column: 12,
							Line:   30,
						},
					},
				},
				Callee: &ast.MemberExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 39,
								Line:   30,
							},
							File:   "ecs_test.flux",
							Source: "ecs.get_dyn_downsample_info",
							Start: ast.Position{
								Column: 12,
								Line:   30,
							},
						},
					},
					Object: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 15,
									Line:   30,
								},
								File:   "ecs_test.flux",
								Source: "ecs",
								Start: ast.Position{
									Column: 12,
									Line:   30,
								},
							},
						},
						Name: "ecs",
					},
					Property: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   30,
								},
								File:   "ecs_test.flux",
								Source: "get_dyn_downsample_info",
								Start: ast.Position{
									Column: 16,
									Line:   30,
								},
							},
						},
						Name: "get_dyn_downsample_info",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 43,
						Line:   80,
					},
					File:   "ecs_test.flux",
					Source: "inData = \"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)\n+ append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)\n+ append_test(name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z)\n+ append_test(name:\"dyn_downsample_2_stop_offset\", value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z)",
					Start: ast.Position{
						Column: 1,
						Line:   39,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 7,
							Line:   39,
						},
						File:   "ecs_test.flux",
						Source: "inData",
						Start: ast.Position{
							Column: 1,
							Line:   39,
						},
					},
				},
				Name: "inData",
			},
			Init: &ast.BinaryExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 43,
							Line:   80,
						},
						File:   "ecs_test.flux",
						Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)\n+ append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)\n+ append_test(name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z)\n+ append_test(name:\"dyn_downsample_2_stop_offset\", value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z)",
						Start: ast.Position{
							Column: 10,
							Line:   39,
						},
					},
				},
				Left: &ast.BinaryExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 44,
								Line:   78,
							},
							File:   "ecs_test.flux",
							Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)\n+ append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)\n+ append_test(name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z)",
							Start: ast.Position{
								Column: 10,
								Line:   39,
							},
						},
					},
					Left: &ast.BinaryExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 48,
									Line:   76,
								},
								File:   "ecs_test.flux",
								Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)\n+ append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)",
								Start: ast.Position{
									Column: 10,
									Line:   39,
								},
							},
						},
						Left: &ast.BinaryExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 33,
										Line:   74,
									},
									File:   "ecs_test.flux",
									Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")\n+ append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)",
									Start: ast.Position{
										Column: 10,
										Line:   39,
									},
								},
							},
							Left: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 49,
											Line:   72,
										},
										File:   "ecs_test.flux",
										Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is in effect\n\n+ append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")",
										Start: ast.Position{
											Column: 10,
											Line:   39,
										},
									},
								},
								Left: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   67,
											},
											File:   "ecs_test.flux",
											Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)",
											Start: ast.Position{
												Column: 10,
												Line:   39,
											},
										},
									},
									Left: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 44,
													Line:   65,
												},
												File:   "ecs_test.flux",
												Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)\n+ append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)",
												Start: ast.Position{
													Column: 10,
													Line:   39,
												},
											},
										},
										Left: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 33,
														Line:   63,
													},
													File:   "ecs_test.flux",
													Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")\n+ append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)",
													Start: ast.Position{
														Column: 10,
														Line:   39,
													},
												},
											},
											Left: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 37,
															Line:   61,
														},
														File:   "ecs_test.flux",
														Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)\n\n// test that downsample is not enabled\n\n+ append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")",
														Start: ast.Position{
															Column: 10,
															Line:   39,
														},
													},
												},
												Left: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 43,
																Line:   56,
															},
															File:   "ecs_test.flux",
															Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)\n+ append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)",
															Start: ast.Position{
																Column: 10,
																Line:   39,
															},
														},
													},
													Left: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 44,
																	Line:   54,
																},
																File:   "ecs_test.flux",
																Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)\n+ append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)",
																Start: ast.Position{
																	Column: 10,
																	Line:   39,
																},
															},
														},
														Left: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 47,
																		Line:   52,
																	},
																	File:   "ecs_test.flux",
																	Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)\n+ append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)",
																	Start: ast.Position{
																		Column: 10,
																		Line:   39,
																	},
																},
															},
															Left: &ast.BinaryExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 46,
																			Line:   50,
																		},
																		File:   "ecs_test.flux",
																		Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")\n+ append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)",
																		Start: ast.Position{
																			Column: 10,
																			Line:   39,
																		},
																	},
																},
																Left: &ast.BinaryExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 103,
																				Line:   48,
																			},
																			File:   "ecs_test.flux",
																			Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")\n+ append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")",
																			Start: ast.Position{
																				Column: 10,
																				Line:   39,
																			},
																		},
																	},
																	Left: &ast.BinaryExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 97,
																					Line:   46,
																				},
																				File:   "ecs_test.flux",
																				Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"\n+ append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")",
																				Start: ast.Position{
																					Column: 10,
																					Line:   39,
																				},
																			},
																		},
																		Left: &ast.StringLiteral{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 2,
																						Line:   44,
																					},
																					File:   "ecs_test.flux",
																					Source: "\"\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n\"",
																					Start: ast.Position{
																						Column: 10,
																						Line:   39,
																					},
																				},
																			},
																			Value: "\n#datatype,string,long,string,boolean\n#group,false,false,true,false\n#default,_result,,,\n,result,table,test,value\n",
																		},
																		Operator: 5,
																		Right: &ast.CallExpression{
																			Arguments: []ast.Expression{&ast.ObjectExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 96,
																							Line:   46,
																						},
																						File:   "ecs_test.flux",
																						Source: "name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\"",
																						Start: ast.Position{
																							Column: 15,
																							Line:   45,
																						},
																					},
																				},
																				Properties: []*ast.Property{&ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 48,
																								Line:   45,
																							},
																							File:   "ecs_test.flux",
																							Source: "name:\"test_no_adding_downsampled\"",
																							Start: ast.Position{
																								Column: 15,
																								Line:   45,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 19,
																									Line:   45,
																								},
																								File:   "ecs_test.flux",
																								Source: "name",
																								Start: ast.Position{
																									Column: 15,
																									Line:   45,
																								},
																							},
																						},
																						Name: "name",
																					},
																					Value: &ast.StringLiteral{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 48,
																									Line:   45,
																								},
																								File:   "ecs_test.flux",
																								Source: "\"test_no_adding_downsampled\"",
																								Start: ast.Position{
																									Column: 20,
																									Line:   45,
																								},
																							},
																						},
																						Value: "test_no_adding_downsampled",
																					},
																				}, &ast.Property{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 96,
																								Line:   46,
																							},
																							File:   "ecs_test.flux",
																							Source: "value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\"",
																							Start: ast.Position{
																								Column: 50,
																								Line:   45,
																							},
																						},
																					},
																					Key: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 55,
																									Line:   45,
																								},
																								File:   "ecs_test.flux",
																								Source: "value",
																								Start: ast.Position{
																									Column: 50,
																									Line:   45,
																								},
																							},
																						},
																						Name: "value",
																					},
																					Value: &ast.BinaryExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 96,
																									Line:   46,
																								},
																								File:   "ecs_test.flux",
																								Source: "ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\"",
																								Start: ast.Position{
																									Column: 5,
																									Line:   46,
																								},
																							},
																						},
																						Left: &ast.CallExpression{
																							Arguments: []ast.Expression{&ast.ObjectExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 79,
																											Line:   46,
																										},
																										File:   "ecs_test.flux",
																										Source: "measurement:\"cq_test_nd\", period:5,limit:6",
																										Start: ast.Position{
																											Column: 37,
																											Line:   46,
																										},
																									},
																								},
																								Properties: []*ast.Property{&ast.Property{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 61,
																												Line:   46,
																											},
																											File:   "ecs_test.flux",
																											Source: "measurement:\"cq_test_nd\"",
																											Start: ast.Position{
																												Column: 37,
																												Line:   46,
																											},
																										},
																									},
																									Key: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 48,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "measurement",
																												Start: ast.Position{
																													Column: 37,
																													Line:   46,
																												},
																											},
																										},
																										Name: "measurement",
																									},
																									Value: &ast.StringLiteral{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 61,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "\"cq_test_nd\"",
																												Start: ast.Position{
																													Column: 49,
																													Line:   46,
																												},
																											},
																										},
																										Value: "cq_test_nd",
																									},
																								}, &ast.Property{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 71,
																												Line:   46,
																											},
																											File:   "ecs_test.flux",
																											Source: "period:5",
																											Start: ast.Position{
																												Column: 63,
																												Line:   46,
																											},
																										},
																									},
																									Key: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 69,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "period",
																												Start: ast.Position{
																													Column: 63,
																													Line:   46,
																												},
																											},
																										},
																										Name: "period",
																									},
																									Value: &ast.IntegerLiteral{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 71,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "5",
																												Start: ast.Position{
																													Column: 70,
																													Line:   46,
																												},
																											},
																										},
																										Value: int64(5),
																									},
																								}, &ast.Property{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 79,
																												Line:   46,
																											},
																											File:   "ecs_test.flux",
																											Source: "limit:6",
																											Start: ast.Position{
																												Column: 72,
																												Line:   46,
																											},
																										},
																									},
																									Key: &ast.Identifier{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 77,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "limit",
																												Start: ast.Position{
																													Column: 72,
																													Line:   46,
																												},
																											},
																										},
																										Name: "limit",
																									},
																									Value: &ast.IntegerLiteral{
																										BaseNode: ast.BaseNode{
																											Errors: nil,
																											Loc: &ast.SourceLocation{
																												End: ast.Position{
																													Column: 79,
																													Line:   46,
																												},
																												File:   "ecs_test.flux",
																												Source: "6",
																												Start: ast.Position{
																													Column: 78,
																													Line:   46,
																												},
																											},
																										},
																										Value: int64(6),
																									},
																								}},
																								With: nil,
																							}},
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 80,
																										Line:   46,
																									},
																									File:   "ecs_test.flux",
																									Source: "ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6)",
																									Start: ast.Position{
																										Column: 5,
																										Line:   46,
																									},
																								},
																							},
																							Callee: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 36,
																											Line:   46,
																										},
																										File:   "ecs_test.flux",
																										Source: "ecs.get_downsampled_measurement",
																										Start: ast.Position{
																											Column: 5,
																											Line:   46,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 8,
																												Line:   46,
																											},
																											File:   "ecs_test.flux",
																											Source: "ecs",
																											Start: ast.Position{
																												Column: 5,
																												Line:   46,
																											},
																										},
																									},
																									Name: "ecs",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 36,
																												Line:   46,
																											},
																											File:   "ecs_test.flux",
																											Source: "get_downsampled_measurement",
																											Start: ast.Position{
																												Column: 9,
																												Line:   46,
																											},
																										},
																									},
																									Name: "get_downsampled_measurement",
																								},
																							},
																						},
																						Operator: 17,
																						Right: &ast.StringLiteral{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 96,
																										Line:   46,
																									},
																									File:   "ecs_test.flux",
																									Source: "\"cq_test_nd\"",
																									Start: ast.Position{
																										Column: 84,
																										Line:   46,
																									},
																								},
																							},
																							Value: "cq_test_nd",
																						},
																					},
																				}},
																				With: nil,
																			}},
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 97,
																						Line:   46,
																					},
																					File:   "ecs_test.flux",
																					Source: "append_test(name:\"test_no_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test_nd\", period:5,limit:6) == \"cq_test_nd\")",
																					Start: ast.Position{
																						Column: 3,
																						Line:   45,
																					},
																				},
																			},
																			Callee: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 14,
																							Line:   45,
																						},
																						File:   "ecs_test.flux",
																						Source: "append_test",
																						Start: ast.Position{
																							Column: 3,
																							Line:   45,
																						},
																					},
																				},
																				Name: "append_test",
																			},
																		},
																	},
																	Operator: 5,
																	Right: &ast.CallExpression{
																		Arguments: []ast.Expression{&ast.ObjectExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 102,
																						Line:   48,
																					},
																					File:   "ecs_test.flux",
																					Source: "name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\"",
																					Start: ast.Position{
																						Column: 15,
																						Line:   47,
																					},
																				},
																			},
																			Properties: []*ast.Property{&ast.Property{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 45,
																							Line:   47,
																						},
																						File:   "ecs_test.flux",
																						Source: "name:\"test_adding_downsampled\"",
																						Start: ast.Position{
																							Column: 15,
																							Line:   47,
																						},
																					},
																				},
																				Key: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 19,
																								Line:   47,
																							},
																							File:   "ecs_test.flux",
																							Source: "name",
																							Start: ast.Position{
																								Column: 15,
																								Line:   47,
																							},
																						},
																					},
																					Name: "name",
																				},
																				Value: &ast.StringLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 45,
																								Line:   47,
																							},
																							File:   "ecs_test.flux",
																							Source: "\"test_adding_downsampled\"",
																							Start: ast.Position{
																								Column: 20,
																								Line:   47,
																							},
																						},
																					},
																					Value: "test_adding_downsampled",
																				},
																			}, &ast.Property{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 102,
																							Line:   48,
																						},
																						File:   "ecs_test.flux",
																						Source: "value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\"",
																						Start: ast.Position{
																							Column: 47,
																							Line:   47,
																						},
																					},
																				},
																				Key: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 52,
																								Line:   47,
																							},
																							File:   "ecs_test.flux",
																							Source: "value",
																							Start: ast.Position{
																								Column: 47,
																								Line:   47,
																							},
																						},
																					},
																					Name: "value",
																				},
																				Value: &ast.BinaryExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 102,
																								Line:   48,
																							},
																							File:   "ecs_test.flux",
																							Source: "ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\"",
																							Start: ast.Position{
																								Column: 5,
																								Line:   48,
																							},
																						},
																					},
																					Left: &ast.CallExpression{
																						Arguments: []ast.Expression{&ast.ObjectExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 76,
																										Line:   48,
																									},
																									File:   "ecs_test.flux",
																									Source: "measurement:\"cq_test\", period:9,limit:6",
																									Start: ast.Position{
																										Column: 37,
																										Line:   48,
																									},
																								},
																							},
																							Properties: []*ast.Property{&ast.Property{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 58,
																											Line:   48,
																										},
																										File:   "ecs_test.flux",
																										Source: "measurement:\"cq_test\"",
																										Start: ast.Position{
																											Column: 37,
																											Line:   48,
																										},
																									},
																								},
																								Key: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 48,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "measurement",
																											Start: ast.Position{
																												Column: 37,
																												Line:   48,
																											},
																										},
																									},
																									Name: "measurement",
																								},
																								Value: &ast.StringLiteral{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 58,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "\"cq_test\"",
																											Start: ast.Position{
																												Column: 49,
																												Line:   48,
																											},
																										},
																									},
																									Value: "cq_test",
																								},
																							}, &ast.Property{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 68,
																											Line:   48,
																										},
																										File:   "ecs_test.flux",
																										Source: "period:9",
																										Start: ast.Position{
																											Column: 60,
																											Line:   48,
																										},
																									},
																								},
																								Key: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 66,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "period",
																											Start: ast.Position{
																												Column: 60,
																												Line:   48,
																											},
																										},
																									},
																									Name: "period",
																								},
																								Value: &ast.IntegerLiteral{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 68,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "9",
																											Start: ast.Position{
																												Column: 67,
																												Line:   48,
																											},
																										},
																									},
																									Value: int64(9),
																								},
																							}, &ast.Property{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 76,
																											Line:   48,
																										},
																										File:   "ecs_test.flux",
																										Source: "limit:6",
																										Start: ast.Position{
																											Column: 69,
																											Line:   48,
																										},
																									},
																								},
																								Key: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 74,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "limit",
																											Start: ast.Position{
																												Column: 69,
																												Line:   48,
																											},
																										},
																									},
																									Name: "limit",
																								},
																								Value: &ast.IntegerLiteral{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 76,
																												Line:   48,
																											},
																											File:   "ecs_test.flux",
																											Source: "6",
																											Start: ast.Position{
																												Column: 75,
																												Line:   48,
																											},
																										},
																									},
																									Value: int64(6),
																								},
																							}},
																							With: nil,
																						}},
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 77,
																									Line:   48,
																								},
																								File:   "ecs_test.flux",
																								Source: "ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6)",
																								Start: ast.Position{
																									Column: 5,
																									Line:   48,
																								},
																							},
																						},
																						Callee: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 36,
																										Line:   48,
																									},
																									File:   "ecs_test.flux",
																									Source: "ecs.get_downsampled_measurement",
																									Start: ast.Position{
																										Column: 5,
																										Line:   48,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 8,
																											Line:   48,
																										},
																										File:   "ecs_test.flux",
																										Source: "ecs",
																										Start: ast.Position{
																											Column: 5,
																											Line:   48,
																										},
																									},
																								},
																								Name: "ecs",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 36,
																											Line:   48,
																										},
																										File:   "ecs_test.flux",
																										Source: "get_downsampled_measurement",
																										Start: ast.Position{
																											Column: 9,
																											Line:   48,
																										},
																									},
																								},
																								Name: "get_downsampled_measurement",
																							},
																						},
																					},
																					Operator: 17,
																					Right: &ast.StringLiteral{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 102,
																									Line:   48,
																								},
																								File:   "ecs_test.flux",
																								Source: "\"cq_test_downsampled\"",
																								Start: ast.Position{
																									Column: 81,
																									Line:   48,
																								},
																							},
																						},
																						Value: "cq_test_downsampled",
																					},
																				},
																			}},
																			With: nil,
																		}},
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 103,
																					Line:   48,
																				},
																				File:   "ecs_test.flux",
																				Source: "append_test(name:\"test_adding_downsampled\", value:\n    ecs.get_downsampled_measurement(measurement:\"cq_test\", period:9,limit:6) == \"cq_test_downsampled\")",
																				Start: ast.Position{
																					Column: 3,
																					Line:   47,
																				},
																			},
																		},
																		Callee: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 14,
																						Line:   47,
																					},
																					File:   "ecs_test.flux",
																					Source: "append_test",
																					Start: ast.Position{
																						Column: 3,
																						Line:   47,
																					},
																				},
																			},
																			Name: "append_test",
																		},
																	},
																},
																Operator: 5,
																Right: &ast.CallExpression{
																	Arguments: []ast.Expression{&ast.ObjectExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 45,
																					Line:   50,
																				},
																				File:   "ecs_test.flux",
																				Source: "name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000",
																				Start: ast.Position{
																					Column: 15,
																					Line:   49,
																				},
																			},
																		},
																		Properties: []*ast.Property{&ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 43,
																						Line:   49,
																					},
																					File:   "ecs_test.flux",
																					Source: "name:\"minimal_duration_5min\"",
																					Start: ast.Position{
																						Column: 15,
																						Line:   49,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 19,
																							Line:   49,
																						},
																						File:   "ecs_test.flux",
																						Source: "name",
																						Start: ast.Position{
																							Column: 15,
																							Line:   49,
																						},
																					},
																				},
																				Name: "name",
																			},
																			Value: &ast.StringLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 43,
																							Line:   49,
																						},
																						File:   "ecs_test.flux",
																						Source: "\"minimal_duration_5min\"",
																						Start: ast.Position{
																							Column: 20,
																							Line:   49,
																						},
																					},
																				},
																				Value: "minimal_duration_5min",
																			},
																		}, &ast.Property{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 45,
																						Line:   50,
																					},
																					File:   "ecs_test.flux",
																					Source: "value:\n    int(v:dyn_win1.duration) == 300000000000",
																					Start: ast.Position{
																						Column: 45,
																						Line:   49,
																					},
																				},
																			},
																			Key: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 50,
																							Line:   49,
																						},
																						File:   "ecs_test.flux",
																						Source: "value",
																						Start: ast.Position{
																							Column: 45,
																							Line:   49,
																						},
																					},
																				},
																				Name: "value",
																			},
																			Value: &ast.BinaryExpression{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 45,
																							Line:   50,
																						},
																						File:   "ecs_test.flux",
																						Source: "int(v:dyn_win1.duration) == 300000000000",
																						Start: ast.Position{
																							Column: 5,
																							Line:   50,
																						},
																					},
																				},
																				Left: &ast.CallExpression{
																					Arguments: []ast.Expression{&ast.ObjectExpression{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 28,
																									Line:   50,
																								},
																								File:   "ecs_test.flux",
																								Source: "v:dyn_win1.duration",
																								Start: ast.Position{
																									Column: 9,
																									Line:   50,
																								},
																							},
																						},
																						Properties: []*ast.Property{&ast.Property{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 28,
																										Line:   50,
																									},
																									File:   "ecs_test.flux",
																									Source: "v:dyn_win1.duration",
																									Start: ast.Position{
																										Column: 9,
																										Line:   50,
																									},
																								},
																							},
																							Key: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 10,
																											Line:   50,
																										},
																										File:   "ecs_test.flux",
																										Source: "v",
																										Start: ast.Position{
																											Column: 9,
																											Line:   50,
																										},
																									},
																								},
																								Name: "v",
																							},
																							Value: &ast.MemberExpression{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 28,
																											Line:   50,
																										},
																										File:   "ecs_test.flux",
																										Source: "dyn_win1.duration",
																										Start: ast.Position{
																											Column: 11,
																											Line:   50,
																										},
																									},
																								},
																								Object: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 19,
																												Line:   50,
																											},
																											File:   "ecs_test.flux",
																											Source: "dyn_win1",
																											Start: ast.Position{
																												Column: 11,
																												Line:   50,
																											},
																										},
																									},
																									Name: "dyn_win1",
																								},
																								Property: &ast.Identifier{
																									BaseNode: ast.BaseNode{
																										Errors: nil,
																										Loc: &ast.SourceLocation{
																											End: ast.Position{
																												Column: 28,
																												Line:   50,
																											},
																											File:   "ecs_test.flux",
																											Source: "duration",
																											Start: ast.Position{
																												Column: 20,
																												Line:   50,
																											},
																										},
																									},
																									Name: "duration",
																								},
																							},
																						}},
																						With: nil,
																					}},
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 29,
																								Line:   50,
																							},
																							File:   "ecs_test.flux",
																							Source: "int(v:dyn_win1.duration)",
																							Start: ast.Position{
																								Column: 5,
																								Line:   50,
																							},
																						},
																					},
																					Callee: &ast.Identifier{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 8,
																									Line:   50,
																								},
																								File:   "ecs_test.flux",
																								Source: "int",
																								Start: ast.Position{
																									Column: 5,
																									Line:   50,
																								},
																							},
																						},
																						Name: "int",
																					},
																				},
																				Operator: 17,
																				Right: &ast.IntegerLiteral{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 45,
																								Line:   50,
																							},
																							File:   "ecs_test.flux",
																							Source: "300000000000",
																							Start: ast.Position{
																								Column: 33,
																								Line:   50,
																							},
																						},
																					},
																					Value: int64(300000000000),
																				},
																			},
																		}},
																		With: nil,
																	}},
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 46,
																				Line:   50,
																			},
																			File:   "ecs_test.flux",
																			Source: "append_test(name:\"minimal_duration_5min\", value:\n    int(v:dyn_win1.duration) == 300000000000)",
																			Start: ast.Position{
																				Column: 3,
																				Line:   49,
																			},
																		},
																	},
																	Callee: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 14,
																					Line:   49,
																				},
																				File:   "ecs_test.flux",
																				Source: "append_test",
																				Start: ast.Position{
																					Column: 3,
																					Line:   49,
																				},
																			},
																		},
																		Name: "append_test",
																	},
																},
															},
															Operator: 5,
															Right: &ast.CallExpression{
																Arguments: []ast.Expression{&ast.ObjectExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 46,
																				Line:   52,
																			},
																			File:   "ecs_test.flux",
																			Source: "name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000",
																			Start: ast.Position{
																				Column: 15,
																				Line:   51,
																			},
																		},
																	},
																	Properties: []*ast.Property{&ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 37,
																					Line:   51,
																				},
																				File:   "ecs_test.flux",
																				Source: "name:\"larger_duration\"",
																				Start: ast.Position{
																					Column: 15,
																					Line:   51,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 19,
																						Line:   51,
																					},
																					File:   "ecs_test.flux",
																					Source: "name",
																					Start: ast.Position{
																						Column: 15,
																						Line:   51,
																					},
																				},
																			},
																			Name: "name",
																		},
																		Value: &ast.StringLiteral{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 37,
																						Line:   51,
																					},
																					File:   "ecs_test.flux",
																					Source: "\"larger_duration\"",
																					Start: ast.Position{
																						Column: 20,
																						Line:   51,
																					},
																				},
																			},
																			Value: "larger_duration",
																		},
																	}, &ast.Property{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 46,
																					Line:   52,
																				},
																				File:   "ecs_test.flux",
																				Source: "value:\n    int(v:dyn_win2.duration) == 2700000000000",
																				Start: ast.Position{
																					Column: 39,
																					Line:   51,
																				},
																			},
																		},
																		Key: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 44,
																						Line:   51,
																					},
																					File:   "ecs_test.flux",
																					Source: "value",
																					Start: ast.Position{
																						Column: 39,
																						Line:   51,
																					},
																				},
																			},
																			Name: "value",
																		},
																		Value: &ast.BinaryExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 46,
																						Line:   52,
																					},
																					File:   "ecs_test.flux",
																					Source: "int(v:dyn_win2.duration) == 2700000000000",
																					Start: ast.Position{
																						Column: 5,
																						Line:   52,
																					},
																				},
																			},
																			Left: &ast.CallExpression{
																				Arguments: []ast.Expression{&ast.ObjectExpression{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 28,
																								Line:   52,
																							},
																							File:   "ecs_test.flux",
																							Source: "v:dyn_win2.duration",
																							Start: ast.Position{
																								Column: 9,
																								Line:   52,
																							},
																						},
																					},
																					Properties: []*ast.Property{&ast.Property{
																						BaseNode: ast.BaseNode{
																							Errors: nil,
																							Loc: &ast.SourceLocation{
																								End: ast.Position{
																									Column: 28,
																									Line:   52,
																								},
																								File:   "ecs_test.flux",
																								Source: "v:dyn_win2.duration",
																								Start: ast.Position{
																									Column: 9,
																									Line:   52,
																								},
																							},
																						},
																						Key: &ast.Identifier{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 10,
																										Line:   52,
																									},
																									File:   "ecs_test.flux",
																									Source: "v",
																									Start: ast.Position{
																										Column: 9,
																										Line:   52,
																									},
																								},
																							},
																							Name: "v",
																						},
																						Value: &ast.MemberExpression{
																							BaseNode: ast.BaseNode{
																								Errors: nil,
																								Loc: &ast.SourceLocation{
																									End: ast.Position{
																										Column: 28,
																										Line:   52,
																									},
																									File:   "ecs_test.flux",
																									Source: "dyn_win2.duration",
																									Start: ast.Position{
																										Column: 11,
																										Line:   52,
																									},
																								},
																							},
																							Object: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 19,
																											Line:   52,
																										},
																										File:   "ecs_test.flux",
																										Source: "dyn_win2",
																										Start: ast.Position{
																											Column: 11,
																											Line:   52,
																										},
																									},
																								},
																								Name: "dyn_win2",
																							},
																							Property: &ast.Identifier{
																								BaseNode: ast.BaseNode{
																									Errors: nil,
																									Loc: &ast.SourceLocation{
																										End: ast.Position{
																											Column: 28,
																											Line:   52,
																										},
																										File:   "ecs_test.flux",
																										Source: "duration",
																										Start: ast.Position{
																											Column: 20,
																											Line:   52,
																										},
																									},
																								},
																								Name: "duration",
																							},
																						},
																					}},
																					With: nil,
																				}},
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 29,
																							Line:   52,
																						},
																						File:   "ecs_test.flux",
																						Source: "int(v:dyn_win2.duration)",
																						Start: ast.Position{
																							Column: 5,
																							Line:   52,
																						},
																					},
																				},
																				Callee: &ast.Identifier{
																					BaseNode: ast.BaseNode{
																						Errors: nil,
																						Loc: &ast.SourceLocation{
																							End: ast.Position{
																								Column: 8,
																								Line:   52,
																							},
																							File:   "ecs_test.flux",
																							Source: "int",
																							Start: ast.Position{
																								Column: 5,
																								Line:   52,
																							},
																						},
																					},
																					Name: "int",
																				},
																			},
																			Operator: 17,
																			Right: &ast.IntegerLiteral{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 46,
																							Line:   52,
																						},
																						File:   "ecs_test.flux",
																						Source: "2700000000000",
																						Start: ast.Position{
																							Column: 33,
																							Line:   52,
																						},
																					},
																				},
																				Value: int64(2700000000000),
																			},
																		},
																	}},
																	With: nil,
																}},
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 47,
																			Line:   52,
																		},
																		File:   "ecs_test.flux",
																		Source: "append_test(name:\"larger_duration\", value:\n    int(v:dyn_win2.duration) == 2700000000000)",
																		Start: ast.Position{
																			Column: 3,
																			Line:   51,
																		},
																	},
																},
																Callee: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 14,
																				Line:   51,
																			},
																			File:   "ecs_test.flux",
																			Source: "append_test",
																			Start: ast.Position{
																				Column: 3,
																				Line:   51,
																			},
																		},
																	},
																	Name: "append_test",
																},
															},
														},
														Operator: 5,
														Right: &ast.CallExpression{
															Arguments: []ast.Expression{&ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 43,
																			Line:   54,
																		},
																		File:   "ecs_test.flux",
																		Source: "name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z",
																		Start: ast.Position{
																			Column: 15,
																			Line:   53,
																		},
																	},
																},
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 34,
																				Line:   53,
																			},
																			File:   "ecs_test.flux",
																			Source: "name:\"start_offset\"",
																			Start: ast.Position{
																				Column: 15,
																				Line:   53,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 19,
																					Line:   53,
																				},
																				File:   "ecs_test.flux",
																				Source: "name",
																				Start: ast.Position{
																					Column: 15,
																					Line:   53,
																				},
																			},
																		},
																		Name: "name",
																	},
																	Value: &ast.StringLiteral{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 34,
																					Line:   53,
																				},
																				File:   "ecs_test.flux",
																				Source: "\"start_offset\"",
																				Start: ast.Position{
																					Column: 20,
																					Line:   53,
																				},
																			},
																		},
																		Value: "start_offset",
																	},
																}, &ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 43,
																				Line:   54,
																			},
																			File:   "ecs_test.flux",
																			Source: "value:\n    dyn_win2.start == 2019-09-20T16:30:00Z",
																			Start: ast.Position{
																				Column: 36,
																				Line:   53,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 41,
																					Line:   53,
																				},
																				File:   "ecs_test.flux",
																				Source: "value",
																				Start: ast.Position{
																					Column: 36,
																					Line:   53,
																				},
																			},
																		},
																		Name: "value",
																	},
																	Value: &ast.BinaryExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 43,
																					Line:   54,
																				},
																				File:   "ecs_test.flux",
																				Source: "dyn_win2.start == 2019-09-20T16:30:00Z",
																				Start: ast.Position{
																					Column: 5,
																					Line:   54,
																				},
																			},
																		},
																		Left: &ast.MemberExpression{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 19,
																						Line:   54,
																					},
																					File:   "ecs_test.flux",
																					Source: "dyn_win2.start",
																					Start: ast.Position{
																						Column: 5,
																						Line:   54,
																					},
																				},
																			},
																			Object: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 13,
																							Line:   54,
																						},
																						File:   "ecs_test.flux",
																						Source: "dyn_win2",
																						Start: ast.Position{
																							Column: 5,
																							Line:   54,
																						},
																					},
																				},
																				Name: "dyn_win2",
																			},
																			Property: &ast.Identifier{
																				BaseNode: ast.BaseNode{
																					Errors: nil,
																					Loc: &ast.SourceLocation{
																						End: ast.Position{
																							Column: 19,
																							Line:   54,
																						},
																						File:   "ecs_test.flux",
																						Source: "start",
																						Start: ast.Position{
																							Column: 14,
																							Line:   54,
																						},
																					},
																				},
																				Name: "start",
																			},
																		},
																		Operator: 17,
																		Right: &ast.DateTimeLiteral{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 43,
																						Line:   54,
																					},
																					File:   "ecs_test.flux",
																					Source: "2019-09-20T16:30:00Z",
																					Start: ast.Position{
																						Column: 23,
																						Line:   54,
																					},
																				},
																			},
																			Value: parser.MustParseTime("2019-09-20T16:30:00Z"),
																		},
																	},
																}},
																With: nil,
															}},
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 44,
																		Line:   54,
																	},
																	File:   "ecs_test.flux",
																	Source: "append_test(name:\"start_offset\", value:\n    dyn_win2.start == 2019-09-20T16:30:00Z)",
																	Start: ast.Position{
																		Column: 3,
																		Line:   53,
																	},
																},
															},
															Callee: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 14,
																			Line:   53,
																		},
																		File:   "ecs_test.flux",
																		Source: "append_test",
																		Start: ast.Position{
																			Column: 3,
																			Line:   53,
																		},
																	},
																},
																Name: "append_test",
															},
														},
													},
													Operator: 5,
													Right: &ast.CallExpression{
														Arguments: []ast.Expression{&ast.ObjectExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 42,
																		Line:   56,
																	},
																	File:   "ecs_test.flux",
																	Source: "name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z",
																	Start: ast.Position{
																		Column: 15,
																		Line:   55,
																	},
																},
															},
															Properties: []*ast.Property{&ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 33,
																			Line:   55,
																		},
																		File:   "ecs_test.flux",
																		Source: "name:\"stop_offset\"",
																		Start: ast.Position{
																			Column: 15,
																			Line:   55,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 19,
																				Line:   55,
																			},
																			File:   "ecs_test.flux",
																			Source: "name",
																			Start: ast.Position{
																				Column: 15,
																				Line:   55,
																			},
																		},
																	},
																	Name: "name",
																},
																Value: &ast.StringLiteral{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 33,
																				Line:   55,
																			},
																			File:   "ecs_test.flux",
																			Source: "\"stop_offset\"",
																			Start: ast.Position{
																				Column: 20,
																				Line:   55,
																			},
																		},
																	},
																	Value: "stop_offset",
																},
															}, &ast.Property{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 42,
																			Line:   56,
																		},
																		File:   "ecs_test.flux",
																		Source: "value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z",
																		Start: ast.Position{
																			Column: 35,
																			Line:   55,
																		},
																	},
																},
																Key: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 40,
																				Line:   55,
																			},
																			File:   "ecs_test.flux",
																			Source: "value",
																			Start: ast.Position{
																				Column: 35,
																				Line:   55,
																			},
																		},
																	},
																	Name: "value",
																},
																Value: &ast.BinaryExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 42,
																				Line:   56,
																			},
																			File:   "ecs_test.flux",
																			Source: "dyn_win2.stop == 2019-09-22T00:45:00Z",
																			Start: ast.Position{
																				Column: 5,
																				Line:   56,
																			},
																		},
																	},
																	Left: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 18,
																					Line:   56,
																				},
																				File:   "ecs_test.flux",
																				Source: "dyn_win2.stop",
																				Start: ast.Position{
																					Column: 5,
																					Line:   56,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 13,
																						Line:   56,
																					},
																					File:   "ecs_test.flux",
																					Source: "dyn_win2",
																					Start: ast.Position{
																						Column: 5,
																						Line:   56,
																					},
																				},
																			},
																			Name: "dyn_win2",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 18,
																						Line:   56,
																					},
																					File:   "ecs_test.flux",
																					Source: "stop",
																					Start: ast.Position{
																						Column: 14,
																						Line:   56,
																					},
																				},
																			},
																			Name: "stop",
																		},
																	},
																	Operator: 17,
																	Right: &ast.DateTimeLiteral{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 42,
																					Line:   56,
																				},
																				File:   "ecs_test.flux",
																				Source: "2019-09-22T00:45:00Z",
																				Start: ast.Position{
																					Column: 22,
																					Line:   56,
																				},
																			},
																		},
																		Value: parser.MustParseTime("2019-09-22T00:45:00Z"),
																	},
																},
															}},
															With: nil,
														}},
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 43,
																	Line:   56,
																},
																File:   "ecs_test.flux",
																Source: "append_test(name:\"stop_offset\", value:\n    dyn_win2.stop == 2019-09-22T00:45:00Z)",
																Start: ast.Position{
																	Column: 3,
																	Line:   55,
																},
															},
														},
														Callee: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 14,
																		Line:   55,
																	},
																	File:   "ecs_test.flux",
																	Source: "append_test",
																	Start: ast.Position{
																		Column: 3,
																		Line:   55,
																	},
																},
															},
															Name: "append_test",
														},
													},
												},
												Operator: 5,
												Right: &ast.CallExpression{
													Arguments: []ast.Expression{&ast.ObjectExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 36,
																	Line:   61,
																},
																File:   "ecs_test.flux",
																Source: "name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\"",
																Start: ast.Position{
																	Column: 15,
																	Line:   60,
																},
															},
														},
														Properties: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 38,
																		Line:   60,
																	},
																	File:   "ecs_test.flux",
																	Source: "name:\"dyn_downsample_1\"",
																	Start: ast.Position{
																		Column: 15,
																		Line:   60,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 19,
																			Line:   60,
																		},
																		File:   "ecs_test.flux",
																		Source: "name",
																		Start: ast.Position{
																			Column: 15,
																			Line:   60,
																		},
																	},
																},
																Name: "name",
															},
															Value: &ast.StringLiteral{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 38,
																			Line:   60,
																		},
																		File:   "ecs_test.flux",
																		Source: "\"dyn_downsample_1\"",
																		Start: ast.Position{
																			Column: 20,
																			Line:   60,
																		},
																	},
																},
																Value: "dyn_downsample_1",
															},
														}, &ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 36,
																		Line:   61,
																	},
																	File:   "ecs_test.flux",
																	Source: "value:\n    dyn_dsm1.measurement == \"cq_m1\"",
																	Start: ast.Position{
																		Column: 40,
																		Line:   60,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 45,
																			Line:   60,
																		},
																		File:   "ecs_test.flux",
																		Source: "value",
																		Start: ast.Position{
																			Column: 40,
																			Line:   60,
																		},
																	},
																},
																Name: "value",
															},
															Value: &ast.BinaryExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 36,
																			Line:   61,
																		},
																		File:   "ecs_test.flux",
																		Source: "dyn_dsm1.measurement == \"cq_m1\"",
																		Start: ast.Position{
																			Column: 5,
																			Line:   61,
																		},
																	},
																},
																Left: &ast.MemberExpression{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 25,
																				Line:   61,
																			},
																			File:   "ecs_test.flux",
																			Source: "dyn_dsm1.measurement",
																			Start: ast.Position{
																				Column: 5,
																				Line:   61,
																			},
																		},
																	},
																	Object: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 13,
																					Line:   61,
																				},
																				File:   "ecs_test.flux",
																				Source: "dyn_dsm1",
																				Start: ast.Position{
																					Column: 5,
																					Line:   61,
																				},
																			},
																		},
																		Name: "dyn_dsm1",
																	},
																	Property: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 25,
																					Line:   61,
																				},
																				File:   "ecs_test.flux",
																				Source: "measurement",
																				Start: ast.Position{
																					Column: 14,
																					Line:   61,
																				},
																			},
																		},
																		Name: "measurement",
																	},
																},
																Operator: 17,
																Right: &ast.StringLiteral{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 36,
																				Line:   61,
																			},
																			File:   "ecs_test.flux",
																			Source: "\"cq_m1\"",
																			Start: ast.Position{
																				Column: 29,
																				Line:   61,
																			},
																		},
																	},
																	Value: "cq_m1",
																},
															},
														}},
														With: nil,
													}},
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 37,
																Line:   61,
															},
															File:   "ecs_test.flux",
															Source: "append_test(name:\"dyn_downsample_1\", value:\n    dyn_dsm1.measurement == \"cq_m1\")",
															Start: ast.Position{
																Column: 3,
																Line:   60,
															},
														},
													},
													Callee: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 14,
																	Line:   60,
																},
																File:   "ecs_test.flux",
																Source: "append_test",
																Start: ast.Position{
																	Column: 3,
																	Line:   60,
																},
															},
														},
														Name: "append_test",
													},
												},
											},
											Operator: 5,
											Right: &ast.CallExpression{
												Arguments: []ast.Expression{&ast.ObjectExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 32,
																Line:   63,
															},
															File:   "ecs_test.flux",
															Source: "name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0",
															Start: ast.Position{
																Column: 15,
																Line:   62,
															},
														},
													},
													Properties: []*ast.Property{&ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 39,
																	Line:   62,
																},
																File:   "ecs_test.flux",
																Source: "name:\"dyn_downsample_1a\"",
																Start: ast.Position{
																	Column: 15,
																	Line:   62,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 19,
																		Line:   62,
																	},
																	File:   "ecs_test.flux",
																	Source: "name",
																	Start: ast.Position{
																		Column: 15,
																		Line:   62,
																	},
																},
															},
															Name: "name",
														},
														Value: &ast.StringLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 39,
																		Line:   62,
																	},
																	File:   "ecs_test.flux",
																	Source: "\"dyn_downsample_1a\"",
																	Start: ast.Position{
																		Column: 20,
																		Line:   62,
																	},
																},
															},
															Value: "dyn_downsample_1a",
														},
													}, &ast.Property{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 32,
																	Line:   63,
																},
																File:   "ecs_test.flux",
																Source: "value:\n    dyn_dsm1.in_downsample == 0",
																Start: ast.Position{
																	Column: 41,
																	Line:   62,
																},
															},
														},
														Key: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 46,
																		Line:   62,
																	},
																	File:   "ecs_test.flux",
																	Source: "value",
																	Start: ast.Position{
																		Column: 41,
																		Line:   62,
																	},
																},
															},
															Name: "value",
														},
														Value: &ast.BinaryExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 32,
																		Line:   63,
																	},
																	File:   "ecs_test.flux",
																	Source: "dyn_dsm1.in_downsample == 0",
																	Start: ast.Position{
																		Column: 5,
																		Line:   63,
																	},
																},
															},
															Left: &ast.MemberExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 27,
																			Line:   63,
																		},
																		File:   "ecs_test.flux",
																		Source: "dyn_dsm1.in_downsample",
																		Start: ast.Position{
																			Column: 5,
																			Line:   63,
																		},
																	},
																},
																Object: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 13,
																				Line:   63,
																			},
																			File:   "ecs_test.flux",
																			Source: "dyn_dsm1",
																			Start: ast.Position{
																				Column: 5,
																				Line:   63,
																			},
																		},
																	},
																	Name: "dyn_dsm1",
																},
																Property: &ast.Identifier{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 27,
																				Line:   63,
																			},
																			File:   "ecs_test.flux",
																			Source: "in_downsample",
																			Start: ast.Position{
																				Column: 14,
																				Line:   63,
																			},
																		},
																	},
																	Name: "in_downsample",
																},
															},
															Operator: 17,
															Right: &ast.IntegerLiteral{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 32,
																			Line:   63,
																		},
																		File:   "ecs_test.flux",
																		Source: "0",
																		Start: ast.Position{
																			Column: 31,
																			Line:   63,
																		},
																	},
																},
																Value: int64(0),
															},
														},
													}},
													With: nil,
												}},
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 33,
															Line:   63,
														},
														File:   "ecs_test.flux",
														Source: "append_test(name:\"dyn_downsample_1a\", value:\n    dyn_dsm1.in_downsample == 0)",
														Start: ast.Position{
															Column: 3,
															Line:   62,
														},
													},
												},
												Callee: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 14,
																Line:   62,
															},
															File:   "ecs_test.flux",
															Source: "append_test",
															Start: ast.Position{
																Column: 3,
																Line:   62,
															},
														},
													},
													Name: "append_test",
												},
											},
										},
										Operator: 5,
										Right: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 43,
															Line:   65,
														},
														File:   "ecs_test.flux",
														Source: "name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z",
														Start: ast.Position{
															Column: 15,
															Line:   64,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 51,
																Line:   64,
															},
															File:   "ecs_test.flux",
															Source: "name:\"dyn_downsample_1_start_offset\"",
															Start: ast.Position{
																Column: 15,
																Line:   64,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 19,
																	Line:   64,
																},
																File:   "ecs_test.flux",
																Source: "name",
																Start: ast.Position{
																	Column: 15,
																	Line:   64,
																},
															},
														},
														Name: "name",
													},
													Value: &ast.StringLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 51,
																	Line:   64,
																},
																File:   "ecs_test.flux",
																Source: "\"dyn_downsample_1_start_offset\"",
																Start: ast.Position{
																	Column: 20,
																	Line:   64,
																},
															},
														},
														Value: "dyn_downsample_1_start_offset",
													},
												}, &ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 43,
																Line:   65,
															},
															File:   "ecs_test.flux",
															Source: "value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z",
															Start: ast.Position{
																Column: 53,
																Line:   64,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 58,
																	Line:   64,
																},
																File:   "ecs_test.flux",
																Source: "value",
																Start: ast.Position{
																	Column: 53,
																	Line:   64,
																},
															},
														},
														Name: "value",
													},
													Value: &ast.BinaryExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 43,
																	Line:   65,
																},
																File:   "ecs_test.flux",
																Source: "dyn_dsm1.start == 2019-09-20T16:30:00Z",
																Start: ast.Position{
																	Column: 5,
																	Line:   65,
																},
															},
														},
														Left: &ast.MemberExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 19,
																		Line:   65,
																	},
																	File:   "ecs_test.flux",
																	Source: "dyn_dsm1.start",
																	Start: ast.Position{
																		Column: 5,
																		Line:   65,
																	},
																},
															},
															Object: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 13,
																			Line:   65,
																		},
																		File:   "ecs_test.flux",
																		Source: "dyn_dsm1",
																		Start: ast.Position{
																			Column: 5,
																			Line:   65,
																		},
																	},
																},
																Name: "dyn_dsm1",
															},
															Property: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 19,
																			Line:   65,
																		},
																		File:   "ecs_test.flux",
																		Source: "start",
																		Start: ast.Position{
																			Column: 14,
																			Line:   65,
																		},
																	},
																},
																Name: "start",
															},
														},
														Operator: 17,
														Right: &ast.DateTimeLiteral{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 43,
																		Line:   65,
																	},
																	File:   "ecs_test.flux",
																	Source: "2019-09-20T16:30:00Z",
																	Start: ast.Position{
																		Column: 23,
																		Line:   65,
																	},
																},
															},
															Value: parser.MustParseTime("2019-09-20T16:30:00Z"),
														},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 44,
														Line:   65,
													},
													File:   "ecs_test.flux",
													Source: "append_test(name:\"dyn_downsample_1_start_offset\", value:\n    dyn_dsm1.start == 2019-09-20T16:30:00Z)",
													Start: ast.Position{
														Column: 3,
														Line:   64,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 14,
															Line:   64,
														},
														File:   "ecs_test.flux",
														Source: "append_test",
														Start: ast.Position{
															Column: 3,
															Line:   64,
														},
													},
												},
												Name: "append_test",
											},
										},
									},
									Operator: 5,
									Right: &ast.CallExpression{
										Arguments: []ast.Expression{&ast.ObjectExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 42,
														Line:   67,
													},
													File:   "ecs_test.flux",
													Source: "name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z",
													Start: ast.Position{
														Column: 15,
														Line:   66,
													},
												},
											},
											Properties: []*ast.Property{&ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 50,
															Line:   66,
														},
														File:   "ecs_test.flux",
														Source: "name:\"dyn_downsample_1_stop_offset\"",
														Start: ast.Position{
															Column: 15,
															Line:   66,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 19,
																Line:   66,
															},
															File:   "ecs_test.flux",
															Source: "name",
															Start: ast.Position{
																Column: 15,
																Line:   66,
															},
														},
													},
													Name: "name",
												},
												Value: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 50,
																Line:   66,
															},
															File:   "ecs_test.flux",
															Source: "\"dyn_downsample_1_stop_offset\"",
															Start: ast.Position{
																Column: 20,
																Line:   66,
															},
														},
													},
													Value: "dyn_downsample_1_stop_offset",
												},
											}, &ast.Property{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 42,
															Line:   67,
														},
														File:   "ecs_test.flux",
														Source: "value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z",
														Start: ast.Position{
															Column: 52,
															Line:   66,
														},
													},
												},
												Key: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 57,
																Line:   66,
															},
															File:   "ecs_test.flux",
															Source: "value",
															Start: ast.Position{
																Column: 52,
																Line:   66,
															},
														},
													},
													Name: "value",
												},
												Value: &ast.BinaryExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 42,
																Line:   67,
															},
															File:   "ecs_test.flux",
															Source: "dyn_dsm1.stop == 2019-09-22T00:45:00Z",
															Start: ast.Position{
																Column: 5,
																Line:   67,
															},
														},
													},
													Left: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 18,
																	Line:   67,
																},
																File:   "ecs_test.flux",
																Source: "dyn_dsm1.stop",
																Start: ast.Position{
																	Column: 5,
																	Line:   67,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 13,
																		Line:   67,
																	},
																	File:   "ecs_test.flux",
																	Source: "dyn_dsm1",
																	Start: ast.Position{
																		Column: 5,
																		Line:   67,
																	},
																},
															},
															Name: "dyn_dsm1",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 18,
																		Line:   67,
																	},
																	File:   "ecs_test.flux",
																	Source: "stop",
																	Start: ast.Position{
																		Column: 14,
																		Line:   67,
																	},
																},
															},
															Name: "stop",
														},
													},
													Operator: 17,
													Right: &ast.DateTimeLiteral{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 42,
																	Line:   67,
																},
																File:   "ecs_test.flux",
																Source: "2019-09-22T00:45:00Z",
																Start: ast.Position{
																	Column: 22,
																	Line:   67,
																},
															},
														},
														Value: parser.MustParseTime("2019-09-22T00:45:00Z"),
													},
												},
											}},
											With: nil,
										}},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   67,
												},
												File:   "ecs_test.flux",
												Source: "append_test(name:\"dyn_downsample_1_stop_offset\", value:\n    dyn_dsm1.stop == 2019-09-22T00:45:00Z)",
												Start: ast.Position{
													Column: 3,
													Line:   66,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 14,
														Line:   66,
													},
													File:   "ecs_test.flux",
													Source: "append_test",
													Start: ast.Position{
														Column: 3,
														Line:   66,
													},
												},
											},
											Name: "append_test",
										},
									},
								},
								Operator: 5,
								Right: &ast.CallExpression{
									Arguments: []ast.Expression{&ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 48,
													Line:   72,
												},
												File:   "ecs_test.flux",
												Source: "name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\"",
												Start: ast.Position{
													Column: 15,
													Line:   71,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 38,
														Line:   71,
													},
													File:   "ecs_test.flux",
													Source: "name:\"dyn_downsample_2\"",
													Start: ast.Position{
														Column: 15,
														Line:   71,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 19,
															Line:   71,
														},
														File:   "ecs_test.flux",
														Source: "name",
														Start: ast.Position{
															Column: 15,
															Line:   71,
														},
													},
												},
												Name: "name",
											},
											Value: &ast.StringLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 38,
															Line:   71,
														},
														File:   "ecs_test.flux",
														Source: "\"dyn_downsample_2\"",
														Start: ast.Position{
															Column: 20,
															Line:   71,
														},
													},
												},
												Value: "dyn_downsample_2",
											},
										}, &ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 48,
														Line:   72,
													},
													File:   "ecs_test.flux",
													Source: "value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\"",
													Start: ast.Position{
														Column: 40,
														Line:   71,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 45,
															Line:   71,
														},
														File:   "ecs_test.flux",
														Source: "value",
														Start: ast.Position{
															Column: 40,
															Line:   71,
														},
													},
												},
												Name: "value",
											},
											Value: &ast.BinaryExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 48,
															Line:   72,
														},
														File:   "ecs_test.flux",
														Source: "dyn_dsm2.measurement == \"cq_m2_downsampled\"",
														Start: ast.Position{
															Column: 5,
															Line:   72,
														},
													},
												},
												Left: &ast.MemberExpression{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 25,
																Line:   72,
															},
															File:   "ecs_test.flux",
															Source: "dyn_dsm2.measurement",
															Start: ast.Position{
																Column: 5,
																Line:   72,
															},
														},
													},
													Object: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 13,
																	Line:   72,
																},
																File:   "ecs_test.flux",
																Source: "dyn_dsm2",
																Start: ast.Position{
																	Column: 5,
																	Line:   72,
																},
															},
														},
														Name: "dyn_dsm2",
													},
													Property: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 25,
																	Line:   72,
																},
																File:   "ecs_test.flux",
																Source: "measurement",
																Start: ast.Position{
																	Column: 14,
																	Line:   72,
																},
															},
														},
														Name: "measurement",
													},
												},
												Operator: 17,
												Right: &ast.StringLiteral{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 48,
																Line:   72,
															},
															File:   "ecs_test.flux",
															Source: "\"cq_m2_downsampled\"",
															Start: ast.Position{
																Column: 29,
																Line:   72,
															},
														},
													},
													Value: "cq_m2_downsampled",
												},
											},
										}},
										With: nil,
									}},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 49,
												Line:   72,
											},
											File:   "ecs_test.flux",
											Source: "append_test(name:\"dyn_downsample_2\", value:\n    dyn_dsm2.measurement == \"cq_m2_downsampled\")",
											Start: ast.Position{
												Column: 3,
												Line:   71,
											},
										},
									},
									Callee: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 14,
													Line:   71,
												},
												File:   "ecs_test.flux",
												Source: "append_test",
												Start: ast.Position{
													Column: 3,
													Line:   71,
												},
											},
										},
										Name: "append_test",
									},
								},
							},
							Operator: 5,
							Right: &ast.CallExpression{
								Arguments: []ast.Expression{&ast.ObjectExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 32,
												Line:   74,
											},
											File:   "ecs_test.flux",
											Source: "name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1",
											Start: ast.Position{
												Column: 15,
												Line:   73,
											},
										},
									},
									Properties: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 39,
													Line:   73,
												},
												File:   "ecs_test.flux",
												Source: "name:\"dyn_downsample_2a\"",
												Start: ast.Position{
													Column: 15,
													Line:   73,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   73,
													},
													File:   "ecs_test.flux",
													Source: "name",
													Start: ast.Position{
														Column: 15,
														Line:   73,
													},
												},
											},
											Name: "name",
										},
										Value: &ast.StringLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 39,
														Line:   73,
													},
													File:   "ecs_test.flux",
													Source: "\"dyn_downsample_2a\"",
													Start: ast.Position{
														Column: 20,
														Line:   73,
													},
												},
											},
											Value: "dyn_downsample_2a",
										},
									}, &ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 32,
													Line:   74,
												},
												File:   "ecs_test.flux",
												Source: "value:\n    dyn_dsm2.in_downsample == 1",
												Start: ast.Position{
													Column: 41,
													Line:   73,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 46,
														Line:   73,
													},
													File:   "ecs_test.flux",
													Source: "value",
													Start: ast.Position{
														Column: 41,
														Line:   73,
													},
												},
											},
											Name: "value",
										},
										Value: &ast.BinaryExpression{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 32,
														Line:   74,
													},
													File:   "ecs_test.flux",
													Source: "dyn_dsm2.in_downsample == 1",
													Start: ast.Position{
														Column: 5,
														Line:   74,
													},
												},
											},
											Left: &ast.MemberExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 27,
															Line:   74,
														},
														File:   "ecs_test.flux",
														Source: "dyn_dsm2.in_downsample",
														Start: ast.Position{
															Column: 5,
															Line:   74,
														},
													},
												},
												Object: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 13,
																Line:   74,
															},
															File:   "ecs_test.flux",
															Source: "dyn_dsm2",
															Start: ast.Position{
																Column: 5,
																Line:   74,
															},
														},
													},
													Name: "dyn_dsm2",
												},
												Property: &ast.Identifier{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 27,
																Line:   74,
															},
															File:   "ecs_test.flux",
															Source: "in_downsample",
															Start: ast.Position{
																Column: 14,
																Line:   74,
															},
														},
													},
													Name: "in_downsample",
												},
											},
											Operator: 17,
											Right: &ast.IntegerLiteral{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 32,
															Line:   74,
														},
														File:   "ecs_test.flux",
														Source: "1",
														Start: ast.Position{
															Column: 31,
															Line:   74,
														},
													},
												},
												Value: int64(1),
											},
										},
									}},
									With: nil,
								}},
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 33,
											Line:   74,
										},
										File:   "ecs_test.flux",
										Source: "append_test(name:\"dyn_downsample_2a\", value:\n    dyn_dsm2.in_downsample == 1)",
										Start: ast.Position{
											Column: 3,
											Line:   73,
										},
									},
								},
								Callee: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   73,
											},
											File:   "ecs_test.flux",
											Source: "append_test",
											Start: ast.Position{
												Column: 3,
												Line:   73,
											},
										},
									},
									Name: "append_test",
								},
							},
						},
						Operator: 5,
						Right: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   76,
										},
										File:   "ecs_test.flux",
										Source: "name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000",
										Start: ast.Position{
											Column: 15,
											Line:   75,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   75,
											},
											File:   "ecs_test.flux",
											Source: "name:\"dyn_downsample_2_duration\"",
											Start: ast.Position{
												Column: 15,
												Line:   75,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   75,
												},
												File:   "ecs_test.flux",
												Source: "name",
												Start: ast.Position{
													Column: 15,
													Line:   75,
												},
											},
										},
										Name: "name",
									},
									Value: &ast.StringLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   75,
												},
												File:   "ecs_test.flux",
												Source: "\"dyn_downsample_2_duration\"",
												Start: ast.Position{
													Column: 20,
													Line:   75,
												},
											},
										},
										Value: "dyn_downsample_2_duration",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 47,
												Line:   76,
											},
											File:   "ecs_test.flux",
											Source: "value:\n    int(v:dyn_dsm2.duration) == 86400000000000",
											Start: ast.Position{
												Column: 49,
												Line:   75,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 54,
													Line:   75,
												},
												File:   "ecs_test.flux",
												Source: "value",
												Start: ast.Position{
													Column: 49,
													Line:   75,
												},
											},
										},
										Name: "value",
									},
									Value: &ast.BinaryExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 47,
													Line:   76,
												},
												File:   "ecs_test.flux",
												Source: "int(v:dyn_dsm2.duration) == 86400000000000",
												Start: ast.Position{
													Column: 5,
													Line:   76,
												},
											},
										},
										Left: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 28,
															Line:   76,
														},
														File:   "ecs_test.flux",
														Source: "v:dyn_dsm2.duration",
														Start: ast.Position{
															Column: 9,
															Line:   76,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 28,
																Line:   76,
															},
															File:   "ecs_test.flux",
															Source: "v:dyn_dsm2.duration",
															Start: ast.Position{
																Column: 9,
																Line:   76,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 10,
																	Line:   76,
																},
																File:   "ecs_test.flux",
																Source: "v",
																Start: ast.Position{
																	Column: 9,
																	Line:   76,
																},
															},
														},
														Name: "v",
													},
													Value: &ast.MemberExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 28,
																	Line:   76,
																},
																File:   "ecs_test.flux",
																Source: "dyn_dsm2.duration",
																Start: ast.Position{
																	Column: 11,
																	Line:   76,
																},
															},
														},
														Object: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 19,
																		Line:   76,
																	},
																	File:   "ecs_test.flux",
																	Source: "dyn_dsm2",
																	Start: ast.Position{
																		Column: 11,
																		Line:   76,
																	},
																},
															},
															Name: "dyn_dsm2",
														},
														Property: &ast.Identifier{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 28,
																		Line:   76,
																	},
																	File:   "ecs_test.flux",
																	Source: "duration",
																	Start: ast.Position{
																		Column: 20,
																		Line:   76,
																	},
																},
															},
															Name: "duration",
														},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 29,
														Line:   76,
													},
													File:   "ecs_test.flux",
													Source: "int(v:dyn_dsm2.duration)",
													Start: ast.Position{
														Column: 5,
														Line:   76,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 8,
															Line:   76,
														},
														File:   "ecs_test.flux",
														Source: "int",
														Start: ast.Position{
															Column: 5,
															Line:   76,
														},
													},
												},
												Name: "int",
											},
										},
										Operator: 17,
										Right: &ast.IntegerLiteral{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 47,
														Line:   76,
													},
													File:   "ecs_test.flux",
													Source: "86400000000000",
													Start: ast.Position{
														Column: 33,
														Line:   76,
													},
												},
											},
											Value: int64(86400000000000),
										},
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 48,
										Line:   76,
									},
									File:   "ecs_test.flux",
									Source: "append_test(name:\"dyn_downsample_2_duration\", value:\n    int(v:dyn_dsm2.duration) == 86400000000000)",
									Start: ast.Position{
										Column: 3,
										Line:   75,
									},
								},
							},
							Callee: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 14,
											Line:   75,
										},
										File:   "ecs_test.flux",
										Source: "append_test",
										Start: ast.Position{
											Column: 3,
											Line:   75,
										},
									},
								},
								Name: "append_test",
							},
						},
					},
					Operator: 5,
					Right: &ast.CallExpression{
						Arguments: []ast.Expression{&ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 43,
										Line:   78,
									},
									File:   "ecs_test.flux",
									Source: "name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z",
									Start: ast.Position{
										Column: 15,
										Line:   77,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 51,
											Line:   77,
										},
										File:   "ecs_test.flux",
										Source: "name:\"dyn_downsample_2_start_offset\"",
										Start: ast.Position{
											Column: 15,
											Line:   77,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   77,
											},
											File:   "ecs_test.flux",
											Source: "name",
											Start: ast.Position{
												Column: 15,
												Line:   77,
											},
										},
									},
									Name: "name",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 51,
												Line:   77,
											},
											File:   "ecs_test.flux",
											Source: "\"dyn_downsample_2_start_offset\"",
											Start: ast.Position{
												Column: 20,
												Line:   77,
											},
										},
									},
									Value: "dyn_downsample_2_start_offset",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 43,
											Line:   78,
										},
										File:   "ecs_test.flux",
										Source: "value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z",
										Start: ast.Position{
											Column: 53,
											Line:   77,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 58,
												Line:   77,
											},
											File:   "ecs_test.flux",
											Source: "value",
											Start: ast.Position{
												Column: 53,
												Line:   77,
											},
										},
									},
									Name: "value",
								},
								Value: &ast.BinaryExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 43,
												Line:   78,
											},
											File:   "ecs_test.flux",
											Source: "dyn_dsm2.start == 2019-08-26T00:00:00Z",
											Start: ast.Position{
												Column: 5,
												Line:   78,
											},
										},
									},
									Left: &ast.MemberExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 19,
													Line:   78,
												},
												File:   "ecs_test.flux",
												Source: "dyn_dsm2.start",
												Start: ast.Position{
													Column: 5,
													Line:   78,
												},
											},
										},
										Object: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 13,
														Line:   78,
													},
													File:   "ecs_test.flux",
													Source: "dyn_dsm2",
													Start: ast.Position{
														Column: 5,
														Line:   78,
													},
												},
											},
											Name: "dyn_dsm2",
										},
										Property: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 19,
														Line:   78,
													},
													File:   "ecs_test.flux",
													Source: "start",
													Start: ast.Position{
														Column: 14,
														Line:   78,
													},
												},
											},
											Name: "start",
										},
									},
									Operator: 17,
									Right: &ast.DateTimeLiteral{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 43,
													Line:   78,
												},
												File:   "ecs_test.flux",
												Source: "2019-08-26T00:00:00Z",
												Start: ast.Position{
													Column: 23,
													Line:   78,
												},
											},
										},
										Value: parser.MustParseTime("2019-08-26T00:00:00Z"),
									},
								},
							}},
							With: nil,
						}},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 44,
									Line:   78,
								},
								File:   "ecs_test.flux",
								Source: "append_test(name:\"dyn_downsample_2_start_offset\", value:\n    dyn_dsm2.start == 2019-08-26T00:00:00Z)",
								Start: ast.Position{
									Column: 3,
									Line:   77,
								},
							},
						},
						Callee: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 14,
										Line:   77,
									},
									File:   "ecs_test.flux",
									Source: "append_test",
									Start: ast.Position{
										Column: 3,
										Line:   77,
									},
								},
							},
							Name: "append_test",
						},
					},
				},
				Operator: 5,
				Right: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 42,
									Line:   80,
								},
								File:   "ecs_test.flux",
								Source: "name:\"dyn_downsample_2_stop_offset\", value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z",
								Start: ast.Position{
									Column: 15,
									Line:   79,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 50,
										Line:   79,
									},
									File:   "ecs_test.flux",
									Source: "name:\"dyn_downsample_2_stop_offset\"",
									Start: ast.Position{
										Column: 15,
										Line:   79,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   79,
										},
										File:   "ecs_test.flux",
										Source: "name",
										Start: ast.Position{
											Column: 15,
											Line:   79,
										},
									},
								},
								Name: "name",
							},
							Value: &ast.StringLiteral{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 50,
											Line:   79,
										},
										File:   "ecs_test.flux",
										Source: "\"dyn_downsample_2_stop_offset\"",
										Start: ast.Position{
											Column: 20,
											Line:   79,
										},
									},
								},
								Value: "dyn_downsample_2_stop_offset",
							},
						}, &ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 42,
										Line:   80,
									},
									File:   "ecs_test.flux",
									Source: "value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z",
									Start: ast.Position{
										Column: 52,
										Line:   79,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 57,
											Line:   79,
										},
										File:   "ecs_test.flux",
										Source: "value",
										Start: ast.Position{
											Column: 52,
											Line:   79,
										},
									},
								},
								Name: "value",
							},
							Value: &ast.BinaryExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 42,
											Line:   80,
										},
										File:   "ecs_test.flux",
										Source: "dyn_dsm2.stop == 2019-09-23T00:00:00Z",
										Start: ast.Position{
											Column: 5,
											Line:   80,
										},
									},
								},
								Left: &ast.MemberExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 18,
												Line:   80,
											},
											File:   "ecs_test.flux",
											Source: "dyn_dsm2.stop",
											Start: ast.Position{
												Column: 5,
												Line:   80,
											},
										},
									},
									Object: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 13,
													Line:   80,
												},
												File:   "ecs_test.flux",
												Source: "dyn_dsm2",
												Start: ast.Position{
													Column: 5,
													Line:   80,
												},
											},
										},
										Name: "dyn_dsm2",
									},
									Property: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 18,
													Line:   80,
												},
												File:   "ecs_test.flux",
												Source: "stop",
												Start: ast.Position{
													Column: 14,
													Line:   80,
												},
											},
										},
										Name: "stop",
									},
								},
								Operator: 17,
								Right: &ast.DateTimeLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 42,
												Line:   80,
											},
											File:   "ecs_test.flux",
											Source: "2019-09-23T00:00:00Z",
											Start: ast.Position{
												Column: 22,
												Line:   80,
											},
										},
									},
									Value: parser.MustParseTime("2019-09-23T00:00:00Z"),
								},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 43,
								Line:   80,
							},
							File:   "ecs_test.flux",
							Source: "append_test(name:\"dyn_downsample_2_stop_offset\", value:\n    dyn_dsm2.stop == 2019-09-23T00:00:00Z)",
							Start: ast.Position{
								Column: 3,
								Line:   79,
							},
						},
					},
					Callee: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 14,
									Line:   79,
								},
								File:   "ecs_test.flux",
								Source: "append_test",
								Start: ast.Position{
									Column: 3,
									Line:   79,
								},
							},
						},
						Name: "append_test",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 57,
						Line:   84,
					},
					File:   "ecs_test.flux",
					Source: "input = csv.from(csv: inData) |> group(columns:[\"test\"])",
					Start: ast.Position{
						Column: 1,
						Line:   84,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 6,
							Line:   84,
						},
						File:   "ecs_test.flux",
						Source: "input",
						Start: ast.Position{
							Column: 1,
							Line:   84,
						},
					},
				},
				Name: "input",
			},
			Init: &ast.PipeExpression{
				Argument: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 29,
									Line:   84,
								},
								File:   "ecs_test.flux",
								Source: "csv: inData",
								Start: ast.Position{
									Column: 18,
									Line:   84,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 29,
										Line:   84,
									},
									File:   "ecs_test.flux",
									Source: "csv: inData",
									Start: ast.Position{
										Column: 18,
										Line:   84,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 21,
											Line:   84,
										},
										File:   "ecs_test.flux",
										Source: "csv",
										Start: ast.Position{
											Column: 18,
											Line:   84,
										},
									},
								},
								Name: "csv",
							},
							Value: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 29,
											Line:   84,
										},
										File:   "ecs_test.flux",
										Source: "inData",
										Start: ast.Position{
											Column: 23,
											Line:   84,
										},
									},
								},
								Name: "inData",
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 30,
								Line:   84,
							},
							File:   "ecs_test.flux",
							Source: "csv.from(csv: inData)",
							Start: ast.Position{
								Column: 9,
								Line:   84,
							},
						},
					},
					Callee: &ast.MemberExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 17,
									Line:   84,
								},
								File:   "ecs_test.flux",
								Source: "csv.from",
								Start: ast.Position{
									Column: 9,
									Line:   84,
								},
							},
						},
						Object: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 12,
										Line:   84,
									},
									File:   "ecs_test.flux",
									Source: "csv",
									Start: ast.Position{
										Column: 9,
										Line:   84,
									},
								},
							},
							Name: "csv",
						},
						Property: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 17,
										Line:   84,
									},
									File:   "ecs_test.flux",
									Source: "from",
									Start: ast.Position{
										Column: 13,
										Line:   84,
									},
								},
							},
							Name: "from",
						},
					},
				},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 57,
							Line:   84,
						},
						File:   "ecs_test.flux",
						Source: "csv.from(csv: inData) |> group(columns:[\"test\"])",
						Start: ast.Position{
							Column: 9,
							Line:   84,
						},
					},
				},
				Call: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 56,
									Line:   84,
								},
								File:   "ecs_test.flux",
								Source: "columns:[\"test\"]",
								Start: ast.Position{
									Column: 40,
									Line:   84,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 56,
										Line:   84,
									},
									File:   "ecs_test.flux",
									Source: "columns:[\"test\"]",
									Start: ast.Position{
										Column: 40,
										Line:   84,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 47,
											Line:   84,
										},
										File:   "ecs_test.flux",
										Source: "columns",
										Start: ast.Position{
											Column: 40,
											Line:   84,
										},
									},
								},
								Name: "columns",
							},
							Value: &ast.ArrayExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 56,
											Line:   84,
										},
										File:   "ecs_test.flux",
										Source: "[\"test\"]",
										Start: ast.Position{
											Column: 48,
											Line:   84,
										},
									},
								},
								Elements: []ast.Expression{&ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 55,
												Line:   84,
											},
											File:   "ecs_test.flux",
											Source: "\"test\"",
											Start: ast.Position{
												Column: 49,
												Line:   84,
											},
										},
									},
									Value: "test",
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 57,
								Line:   84,
							},
							File:   "ecs_test.flux",
							Source: "group(columns:[\"test\"])",
							Start: ast.Position{
								Column: 34,
								Line:   84,
							},
						},
					},
					Callee: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 39,
									Line:   84,
								},
								File:   "ecs_test.flux",
								Source: "group",
								Start: ast.Position{
									Column: 34,
									Line:   84,
								},
							},
						},
						Name: "group",
					},
				},
			},
		}, &ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 47,
						Line:   87,
					},
					File:   "ecs_test.flux",
					Source: "want = input |> map(fn: (r) => ({value:true}))",
					Start: ast.Position{
						Column: 1,
						Line:   87,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   87,
						},
						File:   "ecs_test.flux",
						Source: "want",
						Start: ast.Position{
							Column: 1,
							Line:   87,
						},
					},
				},
				Name: "want",
			},
			Init: &ast.PipeExpression{
				Argument: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 13,
								Line:   87,
							},
							File:   "ecs_test.flux",
							Source: "input",
							Start: ast.Position{
								Column: 8,
								Line:   87,
							},
						},
					},
					Name: "input",
				},
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 47,
							Line:   87,
						},
						File:   "ecs_test.flux",
						Source: "input |> map(fn: (r) => ({value:true}))",
						Start: ast.Position{
							Column: 8,
							Line:   87,
						},
					},
				},
				Call: &ast.CallExpression{
					Arguments: []ast.Expression{&ast.ObjectExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 46,
									Line:   87,
								},
								File:   "ecs_test.flux",
								Source: "fn: (r) => ({value:true})",
								Start: ast.Position{
									Column: 21,
									Line:   87,
								},
							},
						},
						Properties: []*ast.Property{&ast.Property{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 46,
										Line:   87,
									},
									File:   "ecs_test.flux",
									Source: "fn: (r) => ({value:true})",
									Start: ast.Position{
										Column: 21,
										Line:   87,
									},
								},
							},
							Key: &ast.Identifier{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   87,
										},
										File:   "ecs_test.flux",
										Source: "fn",
										Start: ast.Position{
											Column: 21,
											Line:   87,
										},
									},
								},
								Name: "fn",
							},
							Value: &ast.FunctionExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 46,
											Line:   87,
										},
										File:   "ecs_test.flux",
										Source: "(r) => ({value:true})",
										Start: ast.Position{
											Column: 25,
											Line:   87,
										},
									},
								},
								Body: &ast.ParenExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   87,
											},
											File:   "ecs_test.flux",
											Source: "({value:true})",
											Start: ast.Position{
												Column: 32,
												Line:   87,
											},
										},
									},
									Expression: &ast.ObjectExpression{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 45,
													Line:   87,
												},
												File:   "ecs_test.flux",
												Source: "{value:true}",
												Start: ast.Position{
													Column: 33,
													Line:   87,
												},
											},
										},
										Properties: []*ast.Property{&ast.Property{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 44,
														Line:   87,
													},
													File:   "ecs_test.flux",
													Source: "value:true",
													Start: ast.Position{
														Column: 34,
														Line:   87,
													},
												},
											},
											Key: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 39,
															Line:   87,
														},
														File:   "ecs_test.flux",
														Source: "value",
														Start: ast.Position{
															Column: 34,
															Line:   87,
														},
													},
												},
												Name: "value",
											},
											Value: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 44,
															Line:   87,
														},
														File:   "ecs_test.flux",
														Source: "true",
														Start: ast.Position{
															Column: 40,
															Line:   87,
														},
													},
												},
												Name: "true",
											},
										}},
										With: nil,
									},
								},
								Params: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 27,
												Line:   87,
											},
											File:   "ecs_test.flux",
											Source: "r",
											Start: ast.Position{
												Column: 26,
												Line:   87,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   87,
												},
												File:   "ecs_test.flux",
												Source: "r",
												Start: ast.Position{
													Column: 26,
													Line:   87,
												},
											},
										},
										Name: "r",
									},
									Value: nil,
								}},
							},
						}},
						With: nil,
					}},
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 47,
								Line:   87,
							},
							File:   "ecs_test.flux",
							Source: "map(fn: (r) => ({value:true}))",
							Start: ast.Position{
								Column: 17,
								Line:   87,
							},
						},
					},
					Callee: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 20,
									Line:   87,
								},
								File:   "ecs_test.flux",
								Source: "map",
								Start: ast.Position{
									Column: 17,
									Line:   87,
								},
							},
						},
						Name: "map",
					},
				},
			},
		}, &ast.TestStatement{
			Assignment: &ast.VariableAssignment{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 104,
							Line:   91,
						},
						File:   "ecs_test.flux",
						Source: "_ecs_functions = () =>\n\t({input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)})",
						Start: ast.Position{
							Column: 6,
							Line:   90,
						},
					},
				},
				ID: &ast.Identifier{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 20,
								Line:   90,
							},
							File:   "ecs_test.flux",
							Source: "_ecs_functions",
							Start: ast.Position{
								Column: 6,
								Line:   90,
							},
						},
					},
					Name: "_ecs_functions",
				},
				Init: &ast.FunctionExpression{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 104,
								Line:   91,
							},
							File:   "ecs_test.flux",
							Source: "() =>\n\t({input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)})",
							Start: ast.Position{
								Column: 23,
								Line:   90,
							},
						},
					},
					Body: &ast.ParenExpression{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 104,
									Line:   91,
								},
								File:   "ecs_test.flux",
								Source: "({input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)})",
								Start: ast.Position{
									Column: 2,
									Line:   91,
								},
							},
						},
						Expression: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 103,
										Line:   91,
									},
									File:   "ecs_test.flux",
									Source: "{input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)}",
									Start: ast.Position{
										Column: 3,
										Line:   91,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 63,
											Line:   91,
										},
										File:   "ecs_test.flux",
										Source: "input: input |> map(fn: (r) => ({value:r.value})) |> sort()",
										Start: ast.Position{
											Column: 4,
											Line:   91,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 9,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "input",
											Start: ast.Position{
												Column: 4,
												Line:   91,
											},
										},
									},
									Name: "input",
								},
								Value: &ast.PipeExpression{
									Argument: &ast.PipeExpression{
										Argument: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 16,
														Line:   91,
													},
													File:   "ecs_test.flux",
													Source: "input",
													Start: ast.Position{
														Column: 11,
														Line:   91,
													},
												},
											},
											Name: "input",
										},
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 53,
													Line:   91,
												},
												File:   "ecs_test.flux",
												Source: "input |> map(fn: (r) => ({value:r.value}))",
												Start: ast.Position{
													Column: 11,
													Line:   91,
												},
											},
										},
										Call: &ast.CallExpression{
											Arguments: []ast.Expression{&ast.ObjectExpression{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 52,
															Line:   91,
														},
														File:   "ecs_test.flux",
														Source: "fn: (r) => ({value:r.value})",
														Start: ast.Position{
															Column: 24,
															Line:   91,
														},
													},
												},
												Properties: []*ast.Property{&ast.Property{
													BaseNode: ast.BaseNode{
														Errors: nil,
														Loc: &ast.SourceLocation{
															End: ast.Position{
																Column: 52,
																Line:   91,
															},
															File:   "ecs_test.flux",
															Source: "fn: (r) => ({value:r.value})",
															Start: ast.Position{
																Column: 24,
																Line:   91,
															},
														},
													},
													Key: &ast.Identifier{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 26,
																	Line:   91,
																},
																File:   "ecs_test.flux",
																Source: "fn",
																Start: ast.Position{
																	Column: 24,
																	Line:   91,
																},
															},
														},
														Name: "fn",
													},
													Value: &ast.FunctionExpression{
														BaseNode: ast.BaseNode{
															Errors: nil,
															Loc: &ast.SourceLocation{
																End: ast.Position{
																	Column: 52,
																	Line:   91,
																},
																File:   "ecs_test.flux",
																Source: "(r) => ({value:r.value})",
																Start: ast.Position{
																	Column: 28,
																	Line:   91,
																},
															},
														},
														Body: &ast.ParenExpression{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 52,
																		Line:   91,
																	},
																	File:   "ecs_test.flux",
																	Source: "({value:r.value})",
																	Start: ast.Position{
																		Column: 35,
																		Line:   91,
																	},
																},
															},
															Expression: &ast.ObjectExpression{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 51,
																			Line:   91,
																		},
																		File:   "ecs_test.flux",
																		Source: "{value:r.value}",
																		Start: ast.Position{
																			Column: 36,
																			Line:   91,
																		},
																	},
																},
																Properties: []*ast.Property{&ast.Property{
																	BaseNode: ast.BaseNode{
																		Errors: nil,
																		Loc: &ast.SourceLocation{
																			End: ast.Position{
																				Column: 50,
																				Line:   91,
																			},
																			File:   "ecs_test.flux",
																			Source: "value:r.value",
																			Start: ast.Position{
																				Column: 37,
																				Line:   91,
																			},
																		},
																	},
																	Key: &ast.Identifier{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 42,
																					Line:   91,
																				},
																				File:   "ecs_test.flux",
																				Source: "value",
																				Start: ast.Position{
																					Column: 37,
																					Line:   91,
																				},
																			},
																		},
																		Name: "value",
																	},
																	Value: &ast.MemberExpression{
																		BaseNode: ast.BaseNode{
																			Errors: nil,
																			Loc: &ast.SourceLocation{
																				End: ast.Position{
																					Column: 50,
																					Line:   91,
																				},
																				File:   "ecs_test.flux",
																				Source: "r.value",
																				Start: ast.Position{
																					Column: 43,
																					Line:   91,
																				},
																			},
																		},
																		Object: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 44,
																						Line:   91,
																					},
																					File:   "ecs_test.flux",
																					Source: "r",
																					Start: ast.Position{
																						Column: 43,
																						Line:   91,
																					},
																				},
																			},
																			Name: "r",
																		},
																		Property: &ast.Identifier{
																			BaseNode: ast.BaseNode{
																				Errors: nil,
																				Loc: &ast.SourceLocation{
																					End: ast.Position{
																						Column: 50,
																						Line:   91,
																					},
																					File:   "ecs_test.flux",
																					Source: "value",
																					Start: ast.Position{
																						Column: 45,
																						Line:   91,
																					},
																				},
																			},
																			Name: "value",
																		},
																	},
																}},
																With: nil,
															},
														},
														Params: []*ast.Property{&ast.Property{
															BaseNode: ast.BaseNode{
																Errors: nil,
																Loc: &ast.SourceLocation{
																	End: ast.Position{
																		Column: 30,
																		Line:   91,
																	},
																	File:   "ecs_test.flux",
																	Source: "r",
																	Start: ast.Position{
																		Column: 29,
																		Line:   91,
																	},
																},
															},
															Key: &ast.Identifier{
																BaseNode: ast.BaseNode{
																	Errors: nil,
																	Loc: &ast.SourceLocation{
																		End: ast.Position{
																			Column: 30,
																			Line:   91,
																		},
																		File:   "ecs_test.flux",
																		Source: "r",
																		Start: ast.Position{
																			Column: 29,
																			Line:   91,
																		},
																	},
																},
																Name: "r",
															},
															Value: nil,
														}},
													},
												}},
												With: nil,
											}},
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 53,
														Line:   91,
													},
													File:   "ecs_test.flux",
													Source: "map(fn: (r) => ({value:r.value}))",
													Start: ast.Position{
														Column: 20,
														Line:   91,
													},
												},
											},
											Callee: &ast.Identifier{
												BaseNode: ast.BaseNode{
													Errors: nil,
													Loc: &ast.SourceLocation{
														End: ast.Position{
															Column: 23,
															Line:   91,
														},
														File:   "ecs_test.flux",
														Source: "map",
														Start: ast.Position{
															Column: 20,
															Line:   91,
														},
													},
												},
												Name: "map",
											},
										},
									},
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 63,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "input |> map(fn: (r) => ({value:r.value})) |> sort()",
											Start: ast.Position{
												Column: 11,
												Line:   91,
											},
										},
									},
									Call: &ast.CallExpression{
										Arguments: nil,
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 63,
													Line:   91,
												},
												File:   "ecs_test.flux",
												Source: "sort()",
												Start: ast.Position{
													Column: 57,
													Line:   91,
												},
											},
										},
										Callee: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 61,
														Line:   91,
													},
													File:   "ecs_test.flux",
													Source: "sort",
													Start: ast.Position{
														Column: 57,
														Line:   91,
													},
												},
											},
											Name: "sort",
										},
									},
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 75,
											Line:   91,
										},
										File:   "ecs_test.flux",
										Source: "want: want",
										Start: ast.Position{
											Column: 65,
											Line:   91,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 69,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 65,
												Line:   91,
											},
										},
									},
									Name: "want",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 75,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "want",
											Start: ast.Position{
												Column: 71,
												Line:   91,
											},
										},
									},
									Name: "want",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 101,
											Line:   91,
										},
										File:   "ecs_test.flux",
										Source: "fn: (table=<-) => (table",
										Start: ast.Position{
											Column: 77,
											Line:   91,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 79,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "fn",
											Start: ast.Position{
												Column: 77,
												Line:   91,
											},
										},
									},
									Name: "fn",
								},
								Value: &ast.FunctionExpression{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 101,
												Line:   91,
											},
											File:   "ecs_test.flux",
											Source: "(table=<-) => (table",
											Start: ast.Position{
												Column: 81,
												Line:   91,
											},
										},
									},
									Body: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 101,
													Line:   91,
												},
												File:   "ecs_test.flux",
												Source: "table",
												Start: ast.Position{
													Column: 96,
													Line:   91,
												},
											},
										},
										Name: "table",
									},
									Params: []*ast.Property{&ast.Property{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 90,
													Line:   91,
												},
												File:   "ecs_test.flux",
												Source: "table=<-",
												Start: ast.Position{
													Column: 82,
													Line:   91,
												},
											},
										},
										Key: &ast.Identifier{
											BaseNode: ast.BaseNode{
												Errors: nil,
												Loc: &ast.SourceLocation{
													End: ast.Position{
														Column: 87,
														Line:   91,
													},
													File:   "ecs_test.flux",
													Source: "table",
													Start: ast.Position{
														Column: 82,
														Line:   91,
													},
												},
											},
											Name: "table",
										},
										Value: &ast.PipeLiteral{BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 90,
													Line:   91,
												},
												File:   "ecs_test.flux",
												Source: "<-",
												Start: ast.Position{
													Column: 88,
													Line:   91,
												},
											},
										}},
									}},
								},
							}},
							With: nil,
						},
					},
					Params: nil,
				},
			},
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 104,
						Line:   91,
					},
					File:   "ecs_test.flux",
					Source: "test _ecs_functions = () =>\n\t({input: input |> map(fn: (r) => ({value:r.value})) |> sort(), want: want, fn: (table=<-) => (table)})",
					Start: ast.Position{
						Column: 1,
						Line:   90,
					},
				},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   3,
					},
					File:   "ecs_test.flux",
					Source: "import \"ecs\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   3,
						},
						File:   "ecs_test.flux",
						Source: "\"ecs\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "ecs",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 13,
						Line:   4,
					},
					File:   "ecs_test.flux",
					Source: "import \"csv\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 13,
							Line:   4,
						},
						File:   "ecs_test.flux",
						Source: "\"csv\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "csv",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   5,
					},
					File:   "ecs_test.flux",
					Source: "import \"testing\"",
					Start: ast.Position{
						Column: 1,
						Line:   5,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   5,
						},
						File:   "ecs_test.flux",
						Source: "\"testing\"",
						Start: ast.Position{
							Column: 8,
							Line:   5,
						},
					},
				},
				Value: "testing",
			},
		}},
		Metadata: "parser-type=go",
		Name:     "ecs_test.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 17,
						Line:   1,
					},
					File:   "ecs_test.flux",
					Source: "package ecs_test",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 17,
							Line:   1,
						},
						File:   "ecs_test.flux",
						Source: "ecs_test",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "ecs_test",
			},
		},
	}},
	Package: "ecs_test",
	Path:    "ecs",
}}
